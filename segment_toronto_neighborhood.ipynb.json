{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement not upgraded as not directly required: beautifulsoup4 in /opt/conda/envs/DSX-Python35/lib/python3.5/site-packages\r\n"
     ]
    }
   ],
   "source": [
    "# install beautifulSoup\n",
    "!pip install beautifulsoup4"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement not upgraded as not directly required: lxml in /opt/conda/envs/DSX-Python35/lib/python3.5/site-packages\r\n"
     ]
    }
   ],
   "source": [
    "!pip install lxml"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement not upgraded as not directly required: requests in /opt/conda/envs/DSX-Python35/lib/python3.5/site-packages\n",
      "Requirement not upgraded as not directly required: chardet<3.1.0,>=3.0.2 in /opt/conda/envs/DSX-Python35/lib/python3.5/site-packages (from requests)\n",
      "Requirement not upgraded as not directly required: idna<2.7,>=2.5 in /opt/conda/envs/DSX-Python35/lib/python3.5/site-packages (from requests)\n",
      "Requirement not upgraded as not directly required: urllib3<1.23,>=1.21.1 in /opt/conda/envs/DSX-Python35/lib/python3.5/site-packages (from requests)\n",
      "Requirement not upgraded as not directly required: certifi>=2017.4.17 in /opt/conda/envs/DSX-Python35/lib/python3.5/site-packages (from requests)\n"
     ]
    }
   ],
   "source": [
    "!pip install requests"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Import BeautifulSoup\n",
    "from bs4 import BeautifulSoup\n",
    "import requests"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h4>Scrape data from wikipedia on Neighbourhoods in Toronto</h4>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['Postcode', 'Borough', 'Neighbourhood\\n']"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import urllib.request  \n",
    "target_url = 'https://en.wikipedia.org/wiki/List_of_postal_codes_of_Canada:_M'\n",
    "data = urllib.request.urlopen(target_url) # it's a file like object and works just like a file\n",
    "#for line in data: # files are iterable\n",
    "#    print(line)\n",
    "\n",
    "soup = BeautifulSoup(data, 'lxml')\n",
    "\n",
    "table = soup.find('table', class_='wikitable sortable')\n",
    "\n",
    "headers = []\n",
    "for header in table.find_all('th'):\n",
    "    headers.append(header.text)\n",
    "    #print(header.text)\n",
    "\n",
    "headers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_all = []\n",
    "for row in table.find_all('tr'):\n",
    "    df_r = []\n",
    "    for cd in row.find_all('td'):\n",
    "        c = cd.text\n",
    "        df_r.append(c)\n",
    "    if len(df_r) == 3:  \n",
    "        df_all.append(df_r)\n",
    "    #print(len(df_r))  \n",
    "    #if len(df_r) == 3:\n",
    "       # df.append(df_r)\n",
    "df_all[:3]\n",
    "codes = []\n",
    "borough = []\n",
    "neigh = []\n",
    "for x in df_all[:]:\n",
    "    codes.append(x[0])\n",
    "    borough.append(x[1])\n",
    "    neigh.append(x[2])\n",
    "\n",
    "data = (codes, borough, neigh)\n",
    "data_dict = dict(zip(headers, data))\n",
    "data_dict\n",
    "\n",
    "df = pd.DataFrame(data_dict)\n",
    "df = df.replace('\\n','', regex=True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Borough', 'Neighbourhood', 'Postcode'], dtype='object')"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.rename(columns = {'Neighbourhood\\n': 'Neighbourhood'}, inplace=True)\n",
    "df.columns\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h4>Drop rows with 'Not assigned' values in Borough</h4>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "df['Borough'].replace('Not assigned', np.nan, inplace=True)\n",
    "df.dropna(axis=0, inplace=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h4>Merge the rows having the same postal code by concatenating the Neighbourhood values</h4>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Postcode</th>\n",
       "      <th>Borough</th>\n",
       "      <th>Neighbourhood</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>M1B</td>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Rouge, Malvern</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>M1C</td>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Highland Creek, Rouge Hill, Port Union</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>M1E</td>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Guildwood, Morningside, West Hill</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>M1G</td>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Woburn</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>M1H</td>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Cedarbrae</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>M1J</td>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Scarborough Village</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>M1K</td>\n",
       "      <td>Scarborough</td>\n",
       "      <td>East Birchmount Park, Ionview, Kennedy Park</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>M1L</td>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Clairlea, Golden Mile, Oakridge</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>M1M</td>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Cliffcrest, Cliffside, Scarborough Village West</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>M1N</td>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Birch Cliff, Cliffside West</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>M1P</td>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Dorset Park, Scarborough Town Centre, Wexford ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>M1R</td>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Maryvale, Wexford</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>M1S</td>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Agincourt</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>M1T</td>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Clarks Corners, Sullivan, Tam O'Shanter</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>M1V</td>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Agincourt North, L'Amoreaux East, Milliken, St...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>M1W</td>\n",
       "      <td>Scarborough</td>\n",
       "      <td>L'Amoreaux West</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>M1X</td>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Upper Rouge</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>M2H</td>\n",
       "      <td>North York</td>\n",
       "      <td>Hillcrest Village</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>M2J</td>\n",
       "      <td>North York</td>\n",
       "      <td>Fairview, Henry Farm, Oriole</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>M2K</td>\n",
       "      <td>North York</td>\n",
       "      <td>Bayview Village</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>M2L</td>\n",
       "      <td>North York</td>\n",
       "      <td>Silver Hills, York Mills</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>M2M</td>\n",
       "      <td>North York</td>\n",
       "      <td>Newtonbrook, Willowdale</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>M2N</td>\n",
       "      <td>North York</td>\n",
       "      <td>Willowdale South</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>M2P</td>\n",
       "      <td>North York</td>\n",
       "      <td>York Mills West</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>M2R</td>\n",
       "      <td>North York</td>\n",
       "      <td>Willowdale West</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>M3A</td>\n",
       "      <td>North York</td>\n",
       "      <td>Parkwoods</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>M3B</td>\n",
       "      <td>North York</td>\n",
       "      <td>Don Mills North</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>M3C</td>\n",
       "      <td>North York</td>\n",
       "      <td>Flemingdon Park, Don Mills South</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>M3H</td>\n",
       "      <td>North York</td>\n",
       "      <td>Bathurst Manor, Downsview North, Wilson Heights</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>M3J</td>\n",
       "      <td>North York</td>\n",
       "      <td>Northwood Park, York University</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73</th>\n",
       "      <td>M6C</td>\n",
       "      <td>York</td>\n",
       "      <td>Humewood-Cedarvale</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>74</th>\n",
       "      <td>M6E</td>\n",
       "      <td>York</td>\n",
       "      <td>Caledonia-Fairbanks</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75</th>\n",
       "      <td>M6G</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>Christie</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76</th>\n",
       "      <td>M6H</td>\n",
       "      <td>West Toronto</td>\n",
       "      <td>Dovercourt Village, Dufferin</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77</th>\n",
       "      <td>M6J</td>\n",
       "      <td>West Toronto</td>\n",
       "      <td>Little Portugal, Trinity</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78</th>\n",
       "      <td>M6K</td>\n",
       "      <td>West Toronto</td>\n",
       "      <td>Brockton, Exhibition Place, Parkdale Village</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79</th>\n",
       "      <td>M6L</td>\n",
       "      <td>North York</td>\n",
       "      <td>Downsview, North Park, Upwood Park</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80</th>\n",
       "      <td>M6M</td>\n",
       "      <td>York</td>\n",
       "      <td>Del Ray, Keelesdale, Mount Dennis, Silverthorn</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>81</th>\n",
       "      <td>M6N</td>\n",
       "      <td>York</td>\n",
       "      <td>The Junction North, Runnymede</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82</th>\n",
       "      <td>M6P</td>\n",
       "      <td>West Toronto</td>\n",
       "      <td>High Park, The Junction South</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>83</th>\n",
       "      <td>M6R</td>\n",
       "      <td>West Toronto</td>\n",
       "      <td>Parkdale, Roncesvalles</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>84</th>\n",
       "      <td>M6S</td>\n",
       "      <td>West Toronto</td>\n",
       "      <td>Runnymede, Swansea</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>85</th>\n",
       "      <td>M7A</td>\n",
       "      <td>Queen's Park</td>\n",
       "      <td>Not assigned</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>86</th>\n",
       "      <td>M7R</td>\n",
       "      <td>Mississauga</td>\n",
       "      <td>Canada Post Gateway Processing Centre</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>87</th>\n",
       "      <td>M7Y</td>\n",
       "      <td>East Toronto</td>\n",
       "      <td>Business Reply Mail Processing Centre 969 Eastern</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>88</th>\n",
       "      <td>M8V</td>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>Humber Bay Shores, Mimico South, New Toronto</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>89</th>\n",
       "      <td>M8W</td>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>Alderwood, Long Branch</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>90</th>\n",
       "      <td>M8X</td>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>The Kingsway, Montgomery Road, Old Mill North</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>91</th>\n",
       "      <td>M8Y</td>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>Humber Bay, King's Mill Park, Kingsway Park So...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>92</th>\n",
       "      <td>M8Z</td>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>Kingsway Park South West, Mimico NW, The Queen...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>93</th>\n",
       "      <td>M9A</td>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>Islington Avenue</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>94</th>\n",
       "      <td>M9B</td>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>Cloverdale, Islington, Martin Grove, Princess ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>M9C</td>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>Bloordale Gardens, Eringate, Markland Wood, Ol...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>M9L</td>\n",
       "      <td>North York</td>\n",
       "      <td>Humber Summit</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>M9M</td>\n",
       "      <td>North York</td>\n",
       "      <td>Emery, Humberlea</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>M9N</td>\n",
       "      <td>York</td>\n",
       "      <td>Weston</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>M9P</td>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>Westmount</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>100</th>\n",
       "      <td>M9R</td>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>Kingsview Village, Martin Grove Gardens, Richv...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>101</th>\n",
       "      <td>M9V</td>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>Albion Gardens, Beaumond Heights, Humbergate, ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>102</th>\n",
       "      <td>M9W</td>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>Northwest</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>103 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    Postcode           Borough  \\\n",
       "0        M1B       Scarborough   \n",
       "1        M1C       Scarborough   \n",
       "2        M1E       Scarborough   \n",
       "3        M1G       Scarborough   \n",
       "4        M1H       Scarborough   \n",
       "5        M1J       Scarborough   \n",
       "6        M1K       Scarborough   \n",
       "7        M1L       Scarborough   \n",
       "8        M1M       Scarborough   \n",
       "9        M1N       Scarborough   \n",
       "10       M1P       Scarborough   \n",
       "11       M1R       Scarborough   \n",
       "12       M1S       Scarborough   \n",
       "13       M1T       Scarborough   \n",
       "14       M1V       Scarborough   \n",
       "15       M1W       Scarborough   \n",
       "16       M1X       Scarborough   \n",
       "17       M2H        North York   \n",
       "18       M2J        North York   \n",
       "19       M2K        North York   \n",
       "20       M2L        North York   \n",
       "21       M2M        North York   \n",
       "22       M2N        North York   \n",
       "23       M2P        North York   \n",
       "24       M2R        North York   \n",
       "25       M3A        North York   \n",
       "26       M3B        North York   \n",
       "27       M3C        North York   \n",
       "28       M3H        North York   \n",
       "29       M3J        North York   \n",
       "..       ...               ...   \n",
       "73       M6C              York   \n",
       "74       M6E              York   \n",
       "75       M6G  Downtown Toronto   \n",
       "76       M6H      West Toronto   \n",
       "77       M6J      West Toronto   \n",
       "78       M6K      West Toronto   \n",
       "79       M6L        North York   \n",
       "80       M6M              York   \n",
       "81       M6N              York   \n",
       "82       M6P      West Toronto   \n",
       "83       M6R      West Toronto   \n",
       "84       M6S      West Toronto   \n",
       "85       M7A      Queen's Park   \n",
       "86       M7R       Mississauga   \n",
       "87       M7Y      East Toronto   \n",
       "88       M8V         Etobicoke   \n",
       "89       M8W         Etobicoke   \n",
       "90       M8X         Etobicoke   \n",
       "91       M8Y         Etobicoke   \n",
       "92       M8Z         Etobicoke   \n",
       "93       M9A         Etobicoke   \n",
       "94       M9B         Etobicoke   \n",
       "95       M9C         Etobicoke   \n",
       "96       M9L        North York   \n",
       "97       M9M        North York   \n",
       "98       M9N              York   \n",
       "99       M9P         Etobicoke   \n",
       "100      M9R         Etobicoke   \n",
       "101      M9V         Etobicoke   \n",
       "102      M9W         Etobicoke   \n",
       "\n",
       "                                         Neighbourhood  \n",
       "0                                       Rouge, Malvern  \n",
       "1               Highland Creek, Rouge Hill, Port Union  \n",
       "2                    Guildwood, Morningside, West Hill  \n",
       "3                                               Woburn  \n",
       "4                                            Cedarbrae  \n",
       "5                                  Scarborough Village  \n",
       "6          East Birchmount Park, Ionview, Kennedy Park  \n",
       "7                      Clairlea, Golden Mile, Oakridge  \n",
       "8      Cliffcrest, Cliffside, Scarborough Village West  \n",
       "9                          Birch Cliff, Cliffside West  \n",
       "10   Dorset Park, Scarborough Town Centre, Wexford ...  \n",
       "11                                   Maryvale, Wexford  \n",
       "12                                           Agincourt  \n",
       "13             Clarks Corners, Sullivan, Tam O'Shanter  \n",
       "14   Agincourt North, L'Amoreaux East, Milliken, St...  \n",
       "15                                     L'Amoreaux West  \n",
       "16                                         Upper Rouge  \n",
       "17                                   Hillcrest Village  \n",
       "18                        Fairview, Henry Farm, Oriole  \n",
       "19                                     Bayview Village  \n",
       "20                            Silver Hills, York Mills  \n",
       "21                             Newtonbrook, Willowdale  \n",
       "22                                    Willowdale South  \n",
       "23                                     York Mills West  \n",
       "24                                     Willowdale West  \n",
       "25                                           Parkwoods  \n",
       "26                                     Don Mills North  \n",
       "27                    Flemingdon Park, Don Mills South  \n",
       "28     Bathurst Manor, Downsview North, Wilson Heights  \n",
       "29                     Northwood Park, York University  \n",
       "..                                                 ...  \n",
       "73                                  Humewood-Cedarvale  \n",
       "74                                 Caledonia-Fairbanks  \n",
       "75                                            Christie  \n",
       "76                        Dovercourt Village, Dufferin  \n",
       "77                            Little Portugal, Trinity  \n",
       "78        Brockton, Exhibition Place, Parkdale Village  \n",
       "79                  Downsview, North Park, Upwood Park  \n",
       "80      Del Ray, Keelesdale, Mount Dennis, Silverthorn  \n",
       "81                       The Junction North, Runnymede  \n",
       "82                       High Park, The Junction South  \n",
       "83                              Parkdale, Roncesvalles  \n",
       "84                                  Runnymede, Swansea  \n",
       "85                                        Not assigned  \n",
       "86               Canada Post Gateway Processing Centre  \n",
       "87   Business Reply Mail Processing Centre 969 Eastern  \n",
       "88        Humber Bay Shores, Mimico South, New Toronto  \n",
       "89                              Alderwood, Long Branch  \n",
       "90       The Kingsway, Montgomery Road, Old Mill North  \n",
       "91   Humber Bay, King's Mill Park, Kingsway Park So...  \n",
       "92   Kingsway Park South West, Mimico NW, The Queen...  \n",
       "93                                    Islington Avenue  \n",
       "94   Cloverdale, Islington, Martin Grove, Princess ...  \n",
       "95   Bloordale Gardens, Eringate, Markland Wood, Ol...  \n",
       "96                                       Humber Summit  \n",
       "97                                    Emery, Humberlea  \n",
       "98                                              Weston  \n",
       "99                                           Westmount  \n",
       "100  Kingsview Village, Martin Grove Gardens, Richv...  \n",
       "101  Albion Gardens, Beaumond Heights, Humbergate, ...  \n",
       "102                                          Northwest  \n",
       "\n",
       "[103 rows x 3 columns]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "change = lambda a: \", \".join(a) \n",
    "\n",
    "df_grouped = df.groupby(['Postcode','Borough'])\n",
    "df_grouped_agg = df_grouped.agg({'Neighbourhood': change}).reset_index()\n",
    "df_grouped_agg\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "103"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(df['Postcode'].unique())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h4>Replace 'Not assigned' values in Neighbourhood with corresponding Borough value</h4>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PostalCode</th>\n",
       "      <th>Borough</th>\n",
       "      <th>Neighbourhood</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>M1B</td>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Rouge, Malvern</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>M1C</td>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Highland Creek, Rouge Hill, Port Union</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>M1E</td>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Guildwood, Morningside, West Hill</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>M1G</td>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Woburn</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>M1H</td>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Cedarbrae</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>M1J</td>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Scarborough Village</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>M1K</td>\n",
       "      <td>Scarborough</td>\n",
       "      <td>East Birchmount Park, Ionview, Kennedy Park</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>M1L</td>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Clairlea, Golden Mile, Oakridge</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>M1M</td>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Cliffcrest, Cliffside, Scarborough Village West</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>M1N</td>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Birch Cliff, Cliffside West</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>M1P</td>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Dorset Park, Scarborough Town Centre, Wexford ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>M1R</td>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Maryvale, Wexford</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>M1S</td>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Agincourt</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>M1T</td>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Clarks Corners, Sullivan, Tam O'Shanter</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>M1V</td>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Agincourt North, L'Amoreaux East, Milliken, St...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>M1W</td>\n",
       "      <td>Scarborough</td>\n",
       "      <td>L'Amoreaux West</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>M1X</td>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Upper Rouge</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>M2H</td>\n",
       "      <td>North York</td>\n",
       "      <td>Hillcrest Village</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>M2J</td>\n",
       "      <td>North York</td>\n",
       "      <td>Fairview, Henry Farm, Oriole</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>M2K</td>\n",
       "      <td>North York</td>\n",
       "      <td>Bayview Village</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>M2L</td>\n",
       "      <td>North York</td>\n",
       "      <td>Silver Hills, York Mills</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>M2M</td>\n",
       "      <td>North York</td>\n",
       "      <td>Newtonbrook, Willowdale</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>M2N</td>\n",
       "      <td>North York</td>\n",
       "      <td>Willowdale South</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>M2P</td>\n",
       "      <td>North York</td>\n",
       "      <td>York Mills West</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>M2R</td>\n",
       "      <td>North York</td>\n",
       "      <td>Willowdale West</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>M3A</td>\n",
       "      <td>North York</td>\n",
       "      <td>Parkwoods</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>M3B</td>\n",
       "      <td>North York</td>\n",
       "      <td>Don Mills North</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>M3C</td>\n",
       "      <td>North York</td>\n",
       "      <td>Flemingdon Park, Don Mills South</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>M3H</td>\n",
       "      <td>North York</td>\n",
       "      <td>Bathurst Manor, Downsview North, Wilson Heights</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>M3J</td>\n",
       "      <td>North York</td>\n",
       "      <td>Northwood Park, York University</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73</th>\n",
       "      <td>M6C</td>\n",
       "      <td>York</td>\n",
       "      <td>Humewood-Cedarvale</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>74</th>\n",
       "      <td>M6E</td>\n",
       "      <td>York</td>\n",
       "      <td>Caledonia-Fairbanks</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75</th>\n",
       "      <td>M6G</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>Christie</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76</th>\n",
       "      <td>M6H</td>\n",
       "      <td>West Toronto</td>\n",
       "      <td>Dovercourt Village, Dufferin</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77</th>\n",
       "      <td>M6J</td>\n",
       "      <td>West Toronto</td>\n",
       "      <td>Little Portugal, Trinity</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78</th>\n",
       "      <td>M6K</td>\n",
       "      <td>West Toronto</td>\n",
       "      <td>Brockton, Exhibition Place, Parkdale Village</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79</th>\n",
       "      <td>M6L</td>\n",
       "      <td>North York</td>\n",
       "      <td>Downsview, North Park, Upwood Park</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80</th>\n",
       "      <td>M6M</td>\n",
       "      <td>York</td>\n",
       "      <td>Del Ray, Keelesdale, Mount Dennis, Silverthorn</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>81</th>\n",
       "      <td>M6N</td>\n",
       "      <td>York</td>\n",
       "      <td>The Junction North, Runnymede</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82</th>\n",
       "      <td>M6P</td>\n",
       "      <td>West Toronto</td>\n",
       "      <td>High Park, The Junction South</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>83</th>\n",
       "      <td>M6R</td>\n",
       "      <td>West Toronto</td>\n",
       "      <td>Parkdale, Roncesvalles</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>84</th>\n",
       "      <td>M6S</td>\n",
       "      <td>West Toronto</td>\n",
       "      <td>Runnymede, Swansea</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>85</th>\n",
       "      <td>M7A</td>\n",
       "      <td>Queen's Park</td>\n",
       "      <td>Queen's Park</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>86</th>\n",
       "      <td>M7R</td>\n",
       "      <td>Mississauga</td>\n",
       "      <td>Canada Post Gateway Processing Centre</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>87</th>\n",
       "      <td>M7Y</td>\n",
       "      <td>East Toronto</td>\n",
       "      <td>Business Reply Mail Processing Centre 969 Eastern</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>88</th>\n",
       "      <td>M8V</td>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>Humber Bay Shores, Mimico South, New Toronto</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>89</th>\n",
       "      <td>M8W</td>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>Alderwood, Long Branch</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>90</th>\n",
       "      <td>M8X</td>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>The Kingsway, Montgomery Road, Old Mill North</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>91</th>\n",
       "      <td>M8Y</td>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>Humber Bay, King's Mill Park, Kingsway Park So...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>92</th>\n",
       "      <td>M8Z</td>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>Kingsway Park South West, Mimico NW, The Queen...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>93</th>\n",
       "      <td>M9A</td>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>Islington Avenue</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>94</th>\n",
       "      <td>M9B</td>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>Cloverdale, Islington, Martin Grove, Princess ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>M9C</td>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>Bloordale Gardens, Eringate, Markland Wood, Ol...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>M9L</td>\n",
       "      <td>North York</td>\n",
       "      <td>Humber Summit</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>M9M</td>\n",
       "      <td>North York</td>\n",
       "      <td>Emery, Humberlea</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>M9N</td>\n",
       "      <td>York</td>\n",
       "      <td>Weston</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>M9P</td>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>Westmount</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>100</th>\n",
       "      <td>M9R</td>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>Kingsview Village, Martin Grove Gardens, Richv...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>101</th>\n",
       "      <td>M9V</td>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>Albion Gardens, Beaumond Heights, Humbergate, ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>102</th>\n",
       "      <td>M9W</td>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>Northwest</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>103 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    PostalCode           Borough  \\\n",
       "0          M1B       Scarborough   \n",
       "1          M1C       Scarborough   \n",
       "2          M1E       Scarborough   \n",
       "3          M1G       Scarborough   \n",
       "4          M1H       Scarborough   \n",
       "5          M1J       Scarborough   \n",
       "6          M1K       Scarborough   \n",
       "7          M1L       Scarborough   \n",
       "8          M1M       Scarborough   \n",
       "9          M1N       Scarborough   \n",
       "10         M1P       Scarborough   \n",
       "11         M1R       Scarborough   \n",
       "12         M1S       Scarborough   \n",
       "13         M1T       Scarborough   \n",
       "14         M1V       Scarborough   \n",
       "15         M1W       Scarborough   \n",
       "16         M1X       Scarborough   \n",
       "17         M2H        North York   \n",
       "18         M2J        North York   \n",
       "19         M2K        North York   \n",
       "20         M2L        North York   \n",
       "21         M2M        North York   \n",
       "22         M2N        North York   \n",
       "23         M2P        North York   \n",
       "24         M2R        North York   \n",
       "25         M3A        North York   \n",
       "26         M3B        North York   \n",
       "27         M3C        North York   \n",
       "28         M3H        North York   \n",
       "29         M3J        North York   \n",
       "..         ...               ...   \n",
       "73         M6C              York   \n",
       "74         M6E              York   \n",
       "75         M6G  Downtown Toronto   \n",
       "76         M6H      West Toronto   \n",
       "77         M6J      West Toronto   \n",
       "78         M6K      West Toronto   \n",
       "79         M6L        North York   \n",
       "80         M6M              York   \n",
       "81         M6N              York   \n",
       "82         M6P      West Toronto   \n",
       "83         M6R      West Toronto   \n",
       "84         M6S      West Toronto   \n",
       "85         M7A      Queen's Park   \n",
       "86         M7R       Mississauga   \n",
       "87         M7Y      East Toronto   \n",
       "88         M8V         Etobicoke   \n",
       "89         M8W         Etobicoke   \n",
       "90         M8X         Etobicoke   \n",
       "91         M8Y         Etobicoke   \n",
       "92         M8Z         Etobicoke   \n",
       "93         M9A         Etobicoke   \n",
       "94         M9B         Etobicoke   \n",
       "95         M9C         Etobicoke   \n",
       "96         M9L        North York   \n",
       "97         M9M        North York   \n",
       "98         M9N              York   \n",
       "99         M9P         Etobicoke   \n",
       "100        M9R         Etobicoke   \n",
       "101        M9V         Etobicoke   \n",
       "102        M9W         Etobicoke   \n",
       "\n",
       "                                         Neighbourhood  \n",
       "0                                       Rouge, Malvern  \n",
       "1               Highland Creek, Rouge Hill, Port Union  \n",
       "2                    Guildwood, Morningside, West Hill  \n",
       "3                                               Woburn  \n",
       "4                                            Cedarbrae  \n",
       "5                                  Scarborough Village  \n",
       "6          East Birchmount Park, Ionview, Kennedy Park  \n",
       "7                      Clairlea, Golden Mile, Oakridge  \n",
       "8      Cliffcrest, Cliffside, Scarborough Village West  \n",
       "9                          Birch Cliff, Cliffside West  \n",
       "10   Dorset Park, Scarborough Town Centre, Wexford ...  \n",
       "11                                   Maryvale, Wexford  \n",
       "12                                           Agincourt  \n",
       "13             Clarks Corners, Sullivan, Tam O'Shanter  \n",
       "14   Agincourt North, L'Amoreaux East, Milliken, St...  \n",
       "15                                     L'Amoreaux West  \n",
       "16                                         Upper Rouge  \n",
       "17                                   Hillcrest Village  \n",
       "18                        Fairview, Henry Farm, Oriole  \n",
       "19                                     Bayview Village  \n",
       "20                            Silver Hills, York Mills  \n",
       "21                             Newtonbrook, Willowdale  \n",
       "22                                    Willowdale South  \n",
       "23                                     York Mills West  \n",
       "24                                     Willowdale West  \n",
       "25                                           Parkwoods  \n",
       "26                                     Don Mills North  \n",
       "27                    Flemingdon Park, Don Mills South  \n",
       "28     Bathurst Manor, Downsview North, Wilson Heights  \n",
       "29                     Northwood Park, York University  \n",
       "..                                                 ...  \n",
       "73                                  Humewood-Cedarvale  \n",
       "74                                 Caledonia-Fairbanks  \n",
       "75                                            Christie  \n",
       "76                        Dovercourt Village, Dufferin  \n",
       "77                            Little Portugal, Trinity  \n",
       "78        Brockton, Exhibition Place, Parkdale Village  \n",
       "79                  Downsview, North Park, Upwood Park  \n",
       "80      Del Ray, Keelesdale, Mount Dennis, Silverthorn  \n",
       "81                       The Junction North, Runnymede  \n",
       "82                       High Park, The Junction South  \n",
       "83                              Parkdale, Roncesvalles  \n",
       "84                                  Runnymede, Swansea  \n",
       "85                                        Queen's Park  \n",
       "86               Canada Post Gateway Processing Centre  \n",
       "87   Business Reply Mail Processing Centre 969 Eastern  \n",
       "88        Humber Bay Shores, Mimico South, New Toronto  \n",
       "89                              Alderwood, Long Branch  \n",
       "90       The Kingsway, Montgomery Road, Old Mill North  \n",
       "91   Humber Bay, King's Mill Park, Kingsway Park So...  \n",
       "92   Kingsway Park South West, Mimico NW, The Queen...  \n",
       "93                                    Islington Avenue  \n",
       "94   Cloverdale, Islington, Martin Grove, Princess ...  \n",
       "95   Bloordale Gardens, Eringate, Markland Wood, Ol...  \n",
       "96                                       Humber Summit  \n",
       "97                                    Emery, Humberlea  \n",
       "98                                              Weston  \n",
       "99                                           Westmount  \n",
       "100  Kingsview Village, Martin Grove Gardens, Richv...  \n",
       "101  Albion Gardens, Beaumond Heights, Humbergate, ...  \n",
       "102                                          Northwest  \n",
       "\n",
       "[103 rows x 3 columns]"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_temp = df_grouped_agg\n",
    "\n",
    "df_temp['Neighbourhood'] = df_temp.where(df_temp.ne('Not assigned'), np.nan).bfill(axis=1).Neighbourhood.fillna(df_temp['Borough'])\n",
    "df_temp.rename(columns={'Postcode': 'PostalCode'}, inplace=True)\n",
    "df_temp\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h4>Print the number of rows of the resultant dataframe</h4>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of rows is: 103\n"
     ]
    }
   ],
   "source": [
    "shape = df_temp.shape\n",
    "print(\"Number of rows is: \"+str(shape[0]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Fetching package metadata .............\n",
      "Solving package specifications: .\n",
      "\n",
      "Package plan for installation in environment /opt/conda/envs/DSX-Python35:\n",
      "\n",
      "The following NEW packages will be INSTALLED:\n",
      "\n",
      "    altair:  2.2.2-py35_1 conda-forge\n",
      "    branca:  0.3.1-py_0   conda-forge\n",
      "    folium:  0.5.0-py_0   conda-forge\n",
      "    vincent: 0.4.4-py_1   conda-forge\n",
      "\n",
      "altair-2.2.2-p 100% |################################| Time: 0:00:00  49.85 MB/s\n",
      "branca-0.3.1-p 100% |################################| Time: 0:00:00  36.77 MB/s\n",
      "vincent-0.4.4- 100% |################################| Time: 0:00:00  34.66 MB/s\n",
      "folium-0.5.0-p 100% |################################| Time: 0:00:00  42.85 MB/s\n"
     ]
    }
   ],
   "source": [
    "import json # library to handle JSON files\n",
    "\n",
    "#!conda install -c conda-forge geopy --yes # uncomment this line if you haven't completed the Foursquare API lab\n",
    "from geopy.geocoders import Nominatim # convert an address into latitude and longitude values\n",
    "\n",
    "import requests # library to handle requests\n",
    "from pandas.io.json import json_normalize # tranform JSON file into a pandas dataframe\n",
    "\n",
    "# Matplotlib and associated plotting modules\n",
    "import matplotlib.cm as cm\n",
    "import matplotlib.colors as colors\n",
    "\n",
    "# import k-means from clustering stage\n",
    "from sklearn.cluster import KMeans\n",
    "\n",
    "!conda install -c conda-forge folium=0.5.0 --yes # uncomment this line if you haven't completed the Foursquare API lab\n",
    "import folium # map rendering library\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The geograpical coordinate of Toronto are 43.653963, -79.387207.\n"
     ]
    }
   ],
   "source": [
    "address = 'Toronto'\n",
    "\n",
    "geolocator = Nominatim(user_agent=\"toro_explorer\")\n",
    "location = geolocator.geocode(address)\n",
    "latitude = location.latitude\n",
    "longitude = location.longitude\n",
    "print('The geograpical coordinate of Toronto are {}, {}.'.format(latitude, longitude))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Postalcode</th>\n",
       "      <th>Borough</th>\n",
       "      <th>Neighborhood</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Empty DataFrame\n",
       "Columns: [Postalcode, Borough, Neighborhood, Latitude, Longitude]\n",
       "Index: []"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# define the dataframe columns\n",
    "column_names = ['PostalCode', 'Borough', 'Neighborhood', 'Latitude', 'Longitude'] \n",
    "\n",
    "# instantiate the dataframe\n",
    "neighborhoods = pd.DataFrame(columns=column_names)\n",
    "neighborhoods"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Borough</th>\n",
       "      <th>Neighborhood</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Rouge, Malvern</td>\n",
       "      <td>43.813464</td>\n",
       "      <td>-79.205981</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Highland Creek, Rouge Hill, Port Union</td>\n",
       "      <td>54.284760</td>\n",
       "      <td>-0.409034</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Guildwood, Morningside, West Hill</td>\n",
       "      <td>43.753480</td>\n",
       "      <td>-79.179995</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Woburn</td>\n",
       "      <td>43.759824</td>\n",
       "      <td>-79.225291</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Cedarbrae</td>\n",
       "      <td>43.756467</td>\n",
       "      <td>-79.226692</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Scarborough Village</td>\n",
       "      <td>43.743742</td>\n",
       "      <td>-79.211632</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Scarborough</td>\n",
       "      <td>East Birchmount Park, Ionview, Kennedy Park</td>\n",
       "      <td>54.284760</td>\n",
       "      <td>-0.409034</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Clairlea, Golden Mile, Oakridge</td>\n",
       "      <td>54.284760</td>\n",
       "      <td>-0.409034</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Cliffcrest, Cliffside, Scarborough Village West</td>\n",
       "      <td>54.284760</td>\n",
       "      <td>-0.409034</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Birch Cliff, Cliffside West</td>\n",
       "      <td>54.284760</td>\n",
       "      <td>-0.409034</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Dorset Park, Scarborough Town Centre, Wexford ...</td>\n",
       "      <td>54.284760</td>\n",
       "      <td>-0.409034</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Maryvale, Wexford</td>\n",
       "      <td>43.759831</td>\n",
       "      <td>-79.296470</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Agincourt</td>\n",
       "      <td>43.785353</td>\n",
       "      <td>-79.278549</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Clarks Corners, Sullivan, Tam O'Shanter</td>\n",
       "      <td>54.284760</td>\n",
       "      <td>-0.409034</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Agincourt North, L'Amoreaux East, Milliken, St...</td>\n",
       "      <td>54.284760</td>\n",
       "      <td>-0.409034</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Scarborough</td>\n",
       "      <td>L'Amoreaux West</td>\n",
       "      <td>43.799003</td>\n",
       "      <td>-79.305967</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Upper Rouge</td>\n",
       "      <td>43.804930</td>\n",
       "      <td>-79.165837</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>North York</td>\n",
       "      <td>Hillcrest Village</td>\n",
       "      <td>43.799664</td>\n",
       "      <td>-79.365019</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>North York</td>\n",
       "      <td>Fairview, Henry Farm, Oriole</td>\n",
       "      <td>43.770817</td>\n",
       "      <td>-79.413300</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>North York</td>\n",
       "      <td>Bayview Village</td>\n",
       "      <td>43.769197</td>\n",
       "      <td>-79.376662</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>North York</td>\n",
       "      <td>Silver Hills, York Mills</td>\n",
       "      <td>43.770817</td>\n",
       "      <td>-79.413300</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>North York</td>\n",
       "      <td>Newtonbrook, Willowdale</td>\n",
       "      <td>43.793886</td>\n",
       "      <td>-79.425679</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>North York</td>\n",
       "      <td>Willowdale South</td>\n",
       "      <td>43.775356</td>\n",
       "      <td>-79.416686</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>North York</td>\n",
       "      <td>York Mills West</td>\n",
       "      <td>43.744039</td>\n",
       "      <td>-79.406657</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>North York</td>\n",
       "      <td>Willowdale West</td>\n",
       "      <td>43.775356</td>\n",
       "      <td>-79.416686</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>North York</td>\n",
       "      <td>Parkwoods</td>\n",
       "      <td>43.761224</td>\n",
       "      <td>-79.323986</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>North York</td>\n",
       "      <td>Don Mills North</td>\n",
       "      <td>43.737178</td>\n",
       "      <td>-79.343451</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>North York</td>\n",
       "      <td>Flemingdon Park, Don Mills South</td>\n",
       "      <td>43.770817</td>\n",
       "      <td>-79.413300</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>North York</td>\n",
       "      <td>Bathurst Manor, Downsview North, Wilson Heights</td>\n",
       "      <td>43.770817</td>\n",
       "      <td>-79.413300</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>North York</td>\n",
       "      <td>Northwood Park, York University</td>\n",
       "      <td>43.770817</td>\n",
       "      <td>-79.413300</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73</th>\n",
       "      <td>York</td>\n",
       "      <td>Humewood-Cedarvale</td>\n",
       "      <td>53.959055</td>\n",
       "      <td>-1.081536</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>74</th>\n",
       "      <td>York</td>\n",
       "      <td>Caledonia-Fairbanks</td>\n",
       "      <td>53.959055</td>\n",
       "      <td>-1.081536</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75</th>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>Christie</td>\n",
       "      <td>43.649991</td>\n",
       "      <td>-79.385722</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76</th>\n",
       "      <td>West Toronto</td>\n",
       "      <td>Dovercourt Village, Dufferin</td>\n",
       "      <td>43.658820</td>\n",
       "      <td>-79.435386</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77</th>\n",
       "      <td>West Toronto</td>\n",
       "      <td>Little Portugal, Trinity</td>\n",
       "      <td>43.653963</td>\n",
       "      <td>-79.387207</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78</th>\n",
       "      <td>West Toronto</td>\n",
       "      <td>Brockton, Exhibition Place, Parkdale Village</td>\n",
       "      <td>43.653963</td>\n",
       "      <td>-79.387207</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79</th>\n",
       "      <td>North York</td>\n",
       "      <td>Downsview, North Park, Upwood Park</td>\n",
       "      <td>43.770817</td>\n",
       "      <td>-79.413300</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80</th>\n",
       "      <td>York</td>\n",
       "      <td>Del Ray, Keelesdale, Mount Dennis, Silverthorn</td>\n",
       "      <td>53.959055</td>\n",
       "      <td>-1.081536</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>81</th>\n",
       "      <td>York</td>\n",
       "      <td>The Junction North, Runnymede</td>\n",
       "      <td>43.666157</td>\n",
       "      <td>-79.487769</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82</th>\n",
       "      <td>West Toronto</td>\n",
       "      <td>High Park, The Junction South</td>\n",
       "      <td>43.653963</td>\n",
       "      <td>-79.387207</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>83</th>\n",
       "      <td>West Toronto</td>\n",
       "      <td>Parkdale, Roncesvalles</td>\n",
       "      <td>43.639846</td>\n",
       "      <td>-79.439646</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>84</th>\n",
       "      <td>West Toronto</td>\n",
       "      <td>Runnymede, Swansea</td>\n",
       "      <td>43.651778</td>\n",
       "      <td>-79.475923</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>85</th>\n",
       "      <td>Queen's Park</td>\n",
       "      <td>Queen's Park</td>\n",
       "      <td>-32.007434</td>\n",
       "      <td>115.938736</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>86</th>\n",
       "      <td>Mississauga</td>\n",
       "      <td>Canada Post Gateway Processing Centre</td>\n",
       "      <td>43.590338</td>\n",
       "      <td>-79.645729</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>87</th>\n",
       "      <td>East Toronto</td>\n",
       "      <td>Business Reply Mail Processing Centre 969 Eastern</td>\n",
       "      <td>43.653963</td>\n",
       "      <td>-79.387207</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>88</th>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>Humber Bay Shores, Mimico South, New Toronto</td>\n",
       "      <td>43.671459</td>\n",
       "      <td>-79.552492</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>89</th>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>Alderwood, Long Branch</td>\n",
       "      <td>43.601717</td>\n",
       "      <td>-79.545232</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>90</th>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>The Kingsway, Montgomery Road, Old Mill North</td>\n",
       "      <td>43.671459</td>\n",
       "      <td>-79.552492</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>91</th>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>Humber Bay, King's Mill Park, Kingsway Park So...</td>\n",
       "      <td>43.671459</td>\n",
       "      <td>-79.552492</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>92</th>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>Kingsway Park South West, Mimico NW, The Queen...</td>\n",
       "      <td>43.671459</td>\n",
       "      <td>-79.552492</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>93</th>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>Islington Avenue</td>\n",
       "      <td>43.703909</td>\n",
       "      <td>-79.549880</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>94</th>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>Cloverdale, Islington, Martin Grove, Princess ...</td>\n",
       "      <td>43.671459</td>\n",
       "      <td>-79.552492</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>Bloordale Gardens, Eringate, Markland Wood, Ol...</td>\n",
       "      <td>43.671459</td>\n",
       "      <td>-79.552492</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>North York</td>\n",
       "      <td>Humber Summit</td>\n",
       "      <td>43.760078</td>\n",
       "      <td>-79.571760</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>North York</td>\n",
       "      <td>Emery, Humberlea</td>\n",
       "      <td>43.719268</td>\n",
       "      <td>-79.537142</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>York</td>\n",
       "      <td>Weston</td>\n",
       "      <td>43.689619</td>\n",
       "      <td>-79.479188</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>Westmount</td>\n",
       "      <td>43.693640</td>\n",
       "      <td>-79.521043</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>100</th>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>Kingsview Village, Martin Grove Gardens, Richv...</td>\n",
       "      <td>43.671459</td>\n",
       "      <td>-79.552492</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>101</th>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>Albion Gardens, Beaumond Heights, Humbergate, ...</td>\n",
       "      <td>43.671459</td>\n",
       "      <td>-79.552492</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>102</th>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>Northwest</td>\n",
       "      <td>43.671459</td>\n",
       "      <td>-79.552492</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>103 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              Borough                                       Neighborhood  \\\n",
       "0         Scarborough                                     Rouge, Malvern   \n",
       "1         Scarborough             Highland Creek, Rouge Hill, Port Union   \n",
       "2         Scarborough                  Guildwood, Morningside, West Hill   \n",
       "3         Scarborough                                             Woburn   \n",
       "4         Scarborough                                          Cedarbrae   \n",
       "5         Scarborough                                Scarborough Village   \n",
       "6         Scarborough        East Birchmount Park, Ionview, Kennedy Park   \n",
       "7         Scarborough                    Clairlea, Golden Mile, Oakridge   \n",
       "8         Scarborough    Cliffcrest, Cliffside, Scarborough Village West   \n",
       "9         Scarborough                        Birch Cliff, Cliffside West   \n",
       "10        Scarborough  Dorset Park, Scarborough Town Centre, Wexford ...   \n",
       "11        Scarborough                                  Maryvale, Wexford   \n",
       "12        Scarborough                                          Agincourt   \n",
       "13        Scarborough            Clarks Corners, Sullivan, Tam O'Shanter   \n",
       "14        Scarborough  Agincourt North, L'Amoreaux East, Milliken, St...   \n",
       "15        Scarborough                                    L'Amoreaux West   \n",
       "16        Scarborough                                        Upper Rouge   \n",
       "17         North York                                  Hillcrest Village   \n",
       "18         North York                       Fairview, Henry Farm, Oriole   \n",
       "19         North York                                    Bayview Village   \n",
       "20         North York                           Silver Hills, York Mills   \n",
       "21         North York                            Newtonbrook, Willowdale   \n",
       "22         North York                                   Willowdale South   \n",
       "23         North York                                    York Mills West   \n",
       "24         North York                                    Willowdale West   \n",
       "25         North York                                          Parkwoods   \n",
       "26         North York                                    Don Mills North   \n",
       "27         North York                   Flemingdon Park, Don Mills South   \n",
       "28         North York    Bathurst Manor, Downsview North, Wilson Heights   \n",
       "29         North York                    Northwood Park, York University   \n",
       "..                ...                                                ...   \n",
       "73               York                                 Humewood-Cedarvale   \n",
       "74               York                                Caledonia-Fairbanks   \n",
       "75   Downtown Toronto                                           Christie   \n",
       "76       West Toronto                       Dovercourt Village, Dufferin   \n",
       "77       West Toronto                           Little Portugal, Trinity   \n",
       "78       West Toronto       Brockton, Exhibition Place, Parkdale Village   \n",
       "79         North York                 Downsview, North Park, Upwood Park   \n",
       "80               York     Del Ray, Keelesdale, Mount Dennis, Silverthorn   \n",
       "81               York                      The Junction North, Runnymede   \n",
       "82       West Toronto                      High Park, The Junction South   \n",
       "83       West Toronto                             Parkdale, Roncesvalles   \n",
       "84       West Toronto                                 Runnymede, Swansea   \n",
       "85       Queen's Park                                       Queen's Park   \n",
       "86        Mississauga              Canada Post Gateway Processing Centre   \n",
       "87       East Toronto  Business Reply Mail Processing Centre 969 Eastern   \n",
       "88          Etobicoke       Humber Bay Shores, Mimico South, New Toronto   \n",
       "89          Etobicoke                             Alderwood, Long Branch   \n",
       "90          Etobicoke      The Kingsway, Montgomery Road, Old Mill North   \n",
       "91          Etobicoke  Humber Bay, King's Mill Park, Kingsway Park So...   \n",
       "92          Etobicoke  Kingsway Park South West, Mimico NW, The Queen...   \n",
       "93          Etobicoke                                   Islington Avenue   \n",
       "94          Etobicoke  Cloverdale, Islington, Martin Grove, Princess ...   \n",
       "95          Etobicoke  Bloordale Gardens, Eringate, Markland Wood, Ol...   \n",
       "96         North York                                      Humber Summit   \n",
       "97         North York                                   Emery, Humberlea   \n",
       "98               York                                             Weston   \n",
       "99          Etobicoke                                          Westmount   \n",
       "100         Etobicoke  Kingsview Village, Martin Grove Gardens, Richv...   \n",
       "101         Etobicoke  Albion Gardens, Beaumond Heights, Humbergate, ...   \n",
       "102         Etobicoke                                          Northwest   \n",
       "\n",
       "      Latitude   Longitude  \n",
       "0    43.813464  -79.205981  \n",
       "1    54.284760   -0.409034  \n",
       "2    43.753480  -79.179995  \n",
       "3    43.759824  -79.225291  \n",
       "4    43.756467  -79.226692  \n",
       "5    43.743742  -79.211632  \n",
       "6    54.284760   -0.409034  \n",
       "7    54.284760   -0.409034  \n",
       "8    54.284760   -0.409034  \n",
       "9    54.284760   -0.409034  \n",
       "10   54.284760   -0.409034  \n",
       "11   43.759831  -79.296470  \n",
       "12   43.785353  -79.278549  \n",
       "13   54.284760   -0.409034  \n",
       "14   54.284760   -0.409034  \n",
       "15   43.799003  -79.305967  \n",
       "16   43.804930  -79.165837  \n",
       "17   43.799664  -79.365019  \n",
       "18   43.770817  -79.413300  \n",
       "19   43.769197  -79.376662  \n",
       "20   43.770817  -79.413300  \n",
       "21   43.793886  -79.425679  \n",
       "22   43.775356  -79.416686  \n",
       "23   43.744039  -79.406657  \n",
       "24   43.775356  -79.416686  \n",
       "25   43.761224  -79.323986  \n",
       "26   43.737178  -79.343451  \n",
       "27   43.770817  -79.413300  \n",
       "28   43.770817  -79.413300  \n",
       "29   43.770817  -79.413300  \n",
       "..         ...         ...  \n",
       "73   53.959055   -1.081536  \n",
       "74   53.959055   -1.081536  \n",
       "75   43.649991  -79.385722  \n",
       "76   43.658820  -79.435386  \n",
       "77   43.653963  -79.387207  \n",
       "78   43.653963  -79.387207  \n",
       "79   43.770817  -79.413300  \n",
       "80   53.959055   -1.081536  \n",
       "81   43.666157  -79.487769  \n",
       "82   43.653963  -79.387207  \n",
       "83   43.639846  -79.439646  \n",
       "84   43.651778  -79.475923  \n",
       "85  -32.007434  115.938736  \n",
       "86   43.590338  -79.645729  \n",
       "87   43.653963  -79.387207  \n",
       "88   43.671459  -79.552492  \n",
       "89   43.601717  -79.545232  \n",
       "90   43.671459  -79.552492  \n",
       "91   43.671459  -79.552492  \n",
       "92   43.671459  -79.552492  \n",
       "93   43.703909  -79.549880  \n",
       "94   43.671459  -79.552492  \n",
       "95   43.671459  -79.552492  \n",
       "96   43.760078  -79.571760  \n",
       "97   43.719268  -79.537142  \n",
       "98   43.689619  -79.479188  \n",
       "99   43.693640  -79.521043  \n",
       "100  43.671459  -79.552492  \n",
       "101  43.671459  -79.552492  \n",
       "102  43.671459  -79.552492  \n",
       "\n",
       "[103 rows x 4 columns]"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "neighborhoods = pd.DataFrame(columns=column_names)\n",
    "for index, row in df_temp.iterrows():\n",
    "    borough = row['Borough'] \n",
    "    neighborhood_name = row['Neighbourhood']\n",
    "    \n",
    "        \n",
    "    address = neighborhood_name+\", \"+borough\n",
    "    geolocator = Nominatim(user_agent=\"toro_explorer\")\n",
    "    n_location = geolocator.geocode(address)\n",
    "    try:\n",
    "        n_latitude = n_location.latitude\n",
    "        n_longitude = n_location.longitude\n",
    "    except:\n",
    "        address = borough\n",
    "        geolocator = Nominatim(user_agent=\"toro_explorer\")\n",
    "        n_location = geolocator.geocode(address)\n",
    "        n_latitude = n_location.latitude\n",
    "        n_longitude = n_location.longitude\n",
    "    #print('The geograpical coordinate of {} are {}, {}.'.format(address, n_latitude, n_longitude))\n",
    "    neighborhoods = neighborhoods.append({'Borough': borough,\n",
    "                                          'Neighborhood': neighborhood_name,\n",
    "                                          'Latitude': n_latitude,\n",
    "                                          'Longitude': n_longitude}, ignore_index=True)\n",
    "    \n",
    "neighborhoods.drop('Postalcode', axis=1, inplace=True)\n",
    "neighborhoods"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><iframe src=\"data:text/html;charset=utf-8;base64,\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
      ],
      "text/plain": [
       "<folium.folium.Map at 0x7f956540acc0>"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create map of Toronto using latitude and longitude values\n",
    "map_toro = folium.Map(location=[latitude, longitude], zoom_start=10)\n",
    "\n",
    "# add markers to map\n",
    "for lat, lng, borough, neighborhood in zip(neighborhoods['Latitude'], neighborhoods['Longitude'], neighborhoods['Borough'], neighborhoods['Neighborhood']):\n",
    "    label = '{}, {}'.format(neighborhood, borough)\n",
    "    label = folium.Popup(label, parse_html=True)\n",
    "    folium.CircleMarker(\n",
    "        [lat, lng],\n",
    "        radius=5,\n",
    "        popup=label,\n",
    "        color='blue',\n",
    "        fill=True,\n",
    "        fill_color='#3186cc',\n",
    "        fill_opacity=0.7,\n",
    "        parse_html=False).add_to(map_toro)  \n",
    "    \n",
    "map_toro"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Your credentails:\n",
      "CLIENT_ID: PWE1OYYQJVRPR30NEY4DAP00OTIMREKUGQVZ5IMEFYJLE5Q4\n",
      "CLIENT_SECRET:0BFI4OURUS4QRA0IMLBH31CINF0HGHJOMTMROEJW0DCIUQ3K\n"
     ]
    }
   ],
   "source": [
    "# @hidden-cell\n",
    "CLIENT_ID = 'PWE1OYYQJVRPR30NEY4DAP00OTIMREKUGQVZ5IMEFYJLE5Q4' # your Foursquare ID\n",
    "CLIENT_SECRET = '0BFI4OURUS4QRA0IMLBH31CINF0HGHJOMTMROEJW0DCIUQ3K' # your Foursquare Secret\n",
    "VERSION = '20180605' # Foursquare API version\n",
    "\n",
    "print('Your credentails:')\n",
    "print('CLIENT_ID: ' + CLIENT_ID)\n",
    "print('CLIENT_SECRET:' + CLIENT_SECRET)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h4>Let us now segment and cluster neighbourhoods in Scarborough</h4>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Borough</th>\n",
       "      <th>Neighborhood</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Rouge, Malvern</td>\n",
       "      <td>43.813464</td>\n",
       "      <td>-79.205981</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Highland Creek, Rouge Hill, Port Union</td>\n",
       "      <td>54.284760</td>\n",
       "      <td>-0.409034</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Guildwood, Morningside, West Hill</td>\n",
       "      <td>43.753480</td>\n",
       "      <td>-79.179995</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Woburn</td>\n",
       "      <td>43.759824</td>\n",
       "      <td>-79.225291</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Cedarbrae</td>\n",
       "      <td>43.756467</td>\n",
       "      <td>-79.226692</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Borough                            Neighborhood   Latitude  Longitude\n",
       "0  Scarborough                          Rouge, Malvern  43.813464 -79.205981\n",
       "1  Scarborough  Highland Creek, Rouge Hill, Port Union  54.284760  -0.409034\n",
       "2  Scarborough       Guildwood, Morningside, West Hill  43.753480 -79.179995\n",
       "3  Scarborough                                  Woburn  43.759824 -79.225291\n",
       "4  Scarborough                               Cedarbrae  43.756467 -79.226692"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "scarborough_data = neighborhoods[neighborhoods['Borough'] == 'Scarborough'].reset_index(drop=True)\n",
    "scarborough_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The geograpical coordinate of Scarborough are 43.773077, -79.257774.\n"
     ]
    }
   ],
   "source": [
    "address = 'Scarborough, Toronto'\n",
    "\n",
    "geolocator = Nominatim(user_agent=\"toro_explorer\")\n",
    "s_location = geolocator.geocode(address)\n",
    "s_latitude = s_location.latitude\n",
    "s_longitude = s_location.longitude\n",
    "print('The geograpical coordinate of Scarborough are {}, {}.'.format(s_latitude, s_longitude))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><iframe src=\"data:text/html;charset=utf-8;base64,\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
      ],
      "text/plain": [
       "<folium.folium.Map at 0x7f956528f358>"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create map of Manhattan using latitude and longitude values\n",
    "map_scarborough = folium.Map(location=[s_latitude, s_longitude], zoom_start=11)\n",
    "\n",
    "# add markers to map\n",
    "for lat, lng, label in zip(scarborough_data['Latitude'], scarborough_data['Longitude'], scarborough_data['Neighborhood']):\n",
    "    label = folium.Popup(label, parse_html=True)\n",
    "    folium.CircleMarker(\n",
    "        [lat, lng],\n",
    "        radius=5,\n",
    "        popup=label,\n",
    "        color='blue',\n",
    "        fill=True,\n",
    "        fill_color='#3186cc',\n",
    "        fill_opacity=0.7,\n",
    "        parse_html=False).add_to(map_scarborough)  \n",
    "    \n",
    "map_scarborough"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h4>Let us explore first of the neighbourhood in Scarborough</h4>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Rouge, Malvern'"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "scarborough_data.loc[0, 'Neighborhood']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Latitude and longitude values of Rouge, Malvern are 43.813464, -79.2059809.\n"
     ]
    }
   ],
   "source": [
    "neighborhood_latitude = scarborough_data.loc[0, 'Latitude'] # neighborhood latitude value\n",
    "neighborhood_longitude = scarborough_data.loc[0, 'Longitude'] # neighborhood longitude value\n",
    "\n",
    "neighborhood_name = scarborough_data.loc[0, 'Neighborhood'] # neighborhood name\n",
    "\n",
    "print('Latitude and longitude values of {} are {}, {}.'.format(neighborhood_name, \n",
    "                                                               neighborhood_latitude, \n",
    "                                                               neighborhood_longitude))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h4>Now let us get the top 100 venues near Rouge and Malvern neighbourhoods within a radius of 500m</h4>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'https://api.foursquare.com/v2/venues/explore?&client_id=PWE1OYYQJVRPR30NEY4DAP00OTIMREKUGQVZ5IMEFYJLE5Q4&client_secret=0BFI4OURUS4QRA0IMLBH31CINF0HGHJOMTMROEJW0DCIUQ3K&v=20180605&ll=43.813464,-79.2059809&radius=500&limit=100'"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "limit=100\n",
    "radius=500\n",
    "url='https://api.foursquare.com/v2/venues/explore?&client_id={}&client_secret={}&v={}&ll={},{}&radius={}&limit={}'.format(CLIENT_ID, CLIENT_SECRET, VERSION, neighborhood_latitude, neighborhood_longitude, radius, limit)\n",
    "url"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'meta': {'code': 200, 'requestId': '5cc130634c1f6743ae4c77e0'},\n",
       " 'response': {'groups': [{'items': [{'reasons': {'count': 0,\n",
       "       'items': [{'reasonName': 'globalInteractionReason',\n",
       "         'summary': 'This spot is popular',\n",
       "         'type': 'general'}]},\n",
       "      'referralId': 'e-0-5812603838fa4be91620e62d-0',\n",
       "      'venue': {'categories': [{'icon': {'prefix': 'https://ss3.4sqi.net/img/categories_v2/shops/realestate_',\n",
       "          'suffix': '.png'},\n",
       "         'id': '5454144b498ec1f095bff2f2',\n",
       "         'name': 'Construction & Landscaping',\n",
       "         'pluralName': 'Construction & Landscaping',\n",
       "         'primary': True,\n",
       "         'shortName': 'Construction'}],\n",
       "       'id': '5812603838fa4be91620e62d',\n",
       "       'location': {'address': '66 McKnight Dr',\n",
       "        'cc': 'CA',\n",
       "        'city': 'Scarborough',\n",
       "        'country': 'Canada',\n",
       "        'distance': 131,\n",
       "        'formattedAddress': ['66 McKnight Dr',\n",
       "         'Scarborough ON M1B 2Z3',\n",
       "         'Canada'],\n",
       "        'labeledLatLngs': [{'label': 'display',\n",
       "          'lat': 43.812284,\n",
       "          'lng': -79.206052}],\n",
       "        'lat': 43.812284,\n",
       "        'lng': -79.206052,\n",
       "        'postalCode': 'M1B 2Z3',\n",
       "        'state': 'ON'},\n",
       "       'name': 'Butler Drain & Waterproofing',\n",
       "       'photos': {'count': 0, 'groups': []}}},\n",
       "     {'reasons': {'count': 0,\n",
       "       'items': [{'reasonName': 'globalInteractionReason',\n",
       "         'summary': 'This spot is popular',\n",
       "         'type': 'general'}]},\n",
       "      'referralId': 'e-0-4c843fe12f1c236a23bf4a43-1',\n",
       "      'venue': {'categories': [{'icon': {'prefix': 'https://ss3.4sqi.net/img/categories_v2/food/indian_',\n",
       "          'suffix': '.png'},\n",
       "         'id': '4bf58dd8d48988d10f941735',\n",
       "         'name': 'Indian Restaurant',\n",
       "         'pluralName': 'Indian Restaurants',\n",
       "         'primary': True,\n",
       "         'shortName': 'Indian'}],\n",
       "       'id': '4c843fe12f1c236a23bf4a43',\n",
       "       'location': {'cc': 'CA',\n",
       "        'city': 'Toronto',\n",
       "        'country': 'Canada',\n",
       "        'distance': 497,\n",
       "        'formattedAddress': ['Toronto ON', 'Canada'],\n",
       "        'labeledLatLngs': [{'label': 'display',\n",
       "          'lat': 43.81675636512949,\n",
       "          'lng': -79.2101724737263}],\n",
       "        'lat': 43.81675636512949,\n",
       "        'lng': -79.2101724737263,\n",
       "        'state': 'ON'},\n",
       "       'name': 'Mezbaan',\n",
       "       'photos': {'count': 0, 'groups': []}}}],\n",
       "    'name': 'recommended',\n",
       "    'type': 'Recommended Places'}],\n",
       "  'headerFullLocation': 'Malvern, Toronto',\n",
       "  'headerLocation': 'Malvern',\n",
       "  'headerLocationGranularity': 'neighborhood',\n",
       "  'suggestedBounds': {'ne': {'lat': 43.817964004500006,\n",
       "    'lng': -79.19975637441742},\n",
       "   'sw': {'lat': 43.8089639955, 'lng': -79.21220542558258}},\n",
       "  'totalResults': 2,\n",
       "  'warning': {'text': \"There aren't a lot of results near you. Try something more general, reset your filters, or expand the search area.\"}}}"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "results = requests.get(url).json()\n",
    "results"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [],
   "source": [
    "# function that extracts the category of the venue\n",
    "def get_category_type(row):\n",
    "    try:\n",
    "        categories_list = row['categories']\n",
    "    except:\n",
    "        categories_list = row['venue.categories']\n",
    "        \n",
    "    if len(categories_list) == 0:\n",
    "        return None\n",
    "    else:\n",
    "        return categories_list[0]['name']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name</th>\n",
       "      <th>categories</th>\n",
       "      <th>lat</th>\n",
       "      <th>lng</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Butler Drain &amp; Waterproofing</td>\n",
       "      <td>Construction &amp; Landscaping</td>\n",
       "      <td>43.812284</td>\n",
       "      <td>-79.206052</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Mezbaan</td>\n",
       "      <td>Indian Restaurant</td>\n",
       "      <td>43.816756</td>\n",
       "      <td>-79.210172</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                           name                  categories        lat  \\\n",
       "0  Butler Drain & Waterproofing  Construction & Landscaping  43.812284   \n",
       "1                       Mezbaan           Indian Restaurant  43.816756   \n",
       "\n",
       "         lng  \n",
       "0 -79.206052  \n",
       "1 -79.210172  "
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "venues = results['response']['groups'][0]['items']\n",
    "    \n",
    "nearby_venues = json_normalize(venues) # flatten JSON\n",
    "\n",
    "# filter columns\n",
    "filtered_columns = ['venue.name', 'venue.categories', 'venue.location.lat', 'venue.location.lng']\n",
    "nearby_venues =nearby_venues.loc[:, filtered_columns]\n",
    "\n",
    "# filter the category for each row\n",
    "nearby_venues['venue.categories'] = nearby_venues.apply(get_category_type, axis=1)\n",
    "\n",
    "# clean columns\n",
    "nearby_venues.columns = [col.split(\".\")[-1] for col in nearby_venues.columns]\n",
    "\n",
    "nearby_venues.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2 venues were returned by Foursquare.\n"
     ]
    }
   ],
   "source": [
    "print('{} venues were returned by Foursquare.'.format(nearby_venues.shape[0]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [],
   "source": [
    "def getNearbyVenues(names, latitudes, longitudes, radius=500):\n",
    "    \n",
    "    venues_list=[]\n",
    "    for name, lat, lng in zip(names, latitudes, longitudes):\n",
    "        print(name)\n",
    "            \n",
    "        # create the API request URL\n",
    "        url = 'https://api.foursquare.com/v2/venues/explore?&client_id={}&client_secret={}&v={}&ll={},{}&radius={}&limit={}'.format(\n",
    "            CLIENT_ID, \n",
    "            CLIENT_SECRET, \n",
    "            VERSION, \n",
    "            lat, \n",
    "            lng, \n",
    "            radius, \n",
    "            limit)\n",
    "            \n",
    "        # make the GET request\n",
    "        results = requests.get(url).json()['response']['groups'][0]['items']\n",
    "        \n",
    "        # return only relevant information for each nearby venue\n",
    "        venues_list.append([(\n",
    "            name, \n",
    "            lat, \n",
    "            lng, \n",
    "            v['venue']['name'], \n",
    "            v['venue']['location']['lat'], \n",
    "            v['venue']['location']['lng'],  \n",
    "            v['venue']['categories'][0]['name']) for v in results])\n",
    "\n",
    "    nearby_venues = pd.DataFrame([item for venue_list in venues_list for item in venue_list])\n",
    "    nearby_venues.columns = ['Neighborhood', \n",
    "                  'Neighborhood Latitude', \n",
    "                  'Neighborhood Longitude', \n",
    "                  'Venue', \n",
    "                  'Venue Latitude', \n",
    "                  'Venue Longitude', \n",
    "                  'Venue Category']\n",
    "    \n",
    "    return(nearby_venues)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rouge, Malvern\n",
      "Highland Creek, Rouge Hill, Port Union\n",
      "Guildwood, Morningside, West Hill\n",
      "Woburn\n",
      "Cedarbrae\n",
      "Scarborough Village\n",
      "East Birchmount Park, Ionview, Kennedy Park\n",
      "Clairlea, Golden Mile, Oakridge\n",
      "Cliffcrest, Cliffside, Scarborough Village West\n",
      "Birch Cliff, Cliffside West\n",
      "Dorset Park, Scarborough Town Centre, Wexford Heights\n",
      "Maryvale, Wexford\n",
      "Agincourt\n",
      "Clarks Corners, Sullivan, Tam O'Shanter\n",
      "Agincourt North, L'Amoreaux East, Milliken, Steeles East\n",
      "L'Amoreaux West\n",
      "Upper Rouge\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Neighborhood</th>\n",
       "      <th>Neighborhood Latitude</th>\n",
       "      <th>Neighborhood Longitude</th>\n",
       "      <th>Venue</th>\n",
       "      <th>Venue Latitude</th>\n",
       "      <th>Venue Longitude</th>\n",
       "      <th>Venue Category</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Rouge, Malvern</td>\n",
       "      <td>43.813464</td>\n",
       "      <td>-79.205981</td>\n",
       "      <td>Butler Drain &amp; Waterproofing</td>\n",
       "      <td>43.812284</td>\n",
       "      <td>-79.206052</td>\n",
       "      <td>Construction &amp; Landscaping</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Rouge, Malvern</td>\n",
       "      <td>43.813464</td>\n",
       "      <td>-79.205981</td>\n",
       "      <td>Mezbaan</td>\n",
       "      <td>43.816756</td>\n",
       "      <td>-79.210172</td>\n",
       "      <td>Indian Restaurant</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Highland Creek, Rouge Hill, Port Union</td>\n",
       "      <td>54.284760</td>\n",
       "      <td>-0.409034</td>\n",
       "      <td>Gianni's</td>\n",
       "      <td>54.283031</td>\n",
       "      <td>-0.405256</td>\n",
       "      <td>Italian Restaurant</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Highland Creek, Rouge Hill, Port Union</td>\n",
       "      <td>54.284760</td>\n",
       "      <td>-0.409034</td>\n",
       "      <td>Eat Me Cafe</td>\n",
       "      <td>54.280697</td>\n",
       "      <td>-0.406778</td>\n",
       "      <td>Restaurant</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Highland Creek, Rouge Hill, Port Union</td>\n",
       "      <td>54.284760</td>\n",
       "      <td>-0.409034</td>\n",
       "      <td>Aldi</td>\n",
       "      <td>54.281965</td>\n",
       "      <td>-0.407199</td>\n",
       "      <td>Supermarket</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Highland Creek, Rouge Hill, Port Union</td>\n",
       "      <td>54.284760</td>\n",
       "      <td>-0.409034</td>\n",
       "      <td>Pizza Hut</td>\n",
       "      <td>54.280872</td>\n",
       "      <td>-0.407803</td>\n",
       "      <td>Pizza Place</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Highland Creek, Rouge Hill, Port Union</td>\n",
       "      <td>54.284760</td>\n",
       "      <td>-0.409034</td>\n",
       "      <td>Domino's Pizza</td>\n",
       "      <td>54.283844</td>\n",
       "      <td>-0.403644</td>\n",
       "      <td>Pizza Place</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Highland Creek, Rouge Hill, Port Union</td>\n",
       "      <td>54.284760</td>\n",
       "      <td>-0.409034</td>\n",
       "      <td>Tesco Express</td>\n",
       "      <td>54.283772</td>\n",
       "      <td>-0.403359</td>\n",
       "      <td>Grocery Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Guildwood, Morningside, West Hill</td>\n",
       "      <td>43.753480</td>\n",
       "      <td>-79.179995</td>\n",
       "      <td>Grey Abbey Park</td>\n",
       "      <td>43.755101</td>\n",
       "      <td>-79.174862</td>\n",
       "      <td>Park</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Woburn</td>\n",
       "      <td>43.759824</td>\n",
       "      <td>-79.225291</td>\n",
       "      <td>GoodLife Fitness Scarborough Cedarbrae Mall</td>\n",
       "      <td>43.758303</td>\n",
       "      <td>-79.228533</td>\n",
       "      <td>Gym</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Woburn</td>\n",
       "      <td>43.759824</td>\n",
       "      <td>-79.225291</td>\n",
       "      <td>Shoppers Drug Mart</td>\n",
       "      <td>43.760718</td>\n",
       "      <td>-79.224505</td>\n",
       "      <td>Pharmacy</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Woburn</td>\n",
       "      <td>43.759824</td>\n",
       "      <td>-79.225291</td>\n",
       "      <td>Pho Dau Bo</td>\n",
       "      <td>43.761286</td>\n",
       "      <td>-79.225170</td>\n",
       "      <td>Vietnamese Restaurant</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Woburn</td>\n",
       "      <td>43.759824</td>\n",
       "      <td>-79.225291</td>\n",
       "      <td>Staples Cedarbrae</td>\n",
       "      <td>43.759851</td>\n",
       "      <td>-79.228335</td>\n",
       "      <td>Paper / Office Supplies Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Woburn</td>\n",
       "      <td>43.759824</td>\n",
       "      <td>-79.225291</td>\n",
       "      <td>TD Canada Trust</td>\n",
       "      <td>43.761520</td>\n",
       "      <td>-79.226557</td>\n",
       "      <td>Bank</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Woburn</td>\n",
       "      <td>43.759824</td>\n",
       "      <td>-79.225291</td>\n",
       "      <td>Pizza Pizza</td>\n",
       "      <td>43.759321</td>\n",
       "      <td>-79.224929</td>\n",
       "      <td>Pizza Place</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Woburn</td>\n",
       "      <td>43.759824</td>\n",
       "      <td>-79.225291</td>\n",
       "      <td>The Beer Store</td>\n",
       "      <td>43.759714</td>\n",
       "      <td>-79.225487</td>\n",
       "      <td>Beer Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Woburn</td>\n",
       "      <td>43.759824</td>\n",
       "      <td>-79.225291</td>\n",
       "      <td>Dollarama</td>\n",
       "      <td>43.758511</td>\n",
       "      <td>-79.227047</td>\n",
       "      <td>Discount Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Woburn</td>\n",
       "      <td>43.759824</td>\n",
       "      <td>-79.225291</td>\n",
       "      <td>Tim Hortons</td>\n",
       "      <td>43.757813</td>\n",
       "      <td>-79.228442</td>\n",
       "      <td>Coffee Shop</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Woburn</td>\n",
       "      <td>43.759824</td>\n",
       "      <td>-79.225291</td>\n",
       "      <td>Toys\"R\"Us</td>\n",
       "      <td>43.758088</td>\n",
       "      <td>-79.227287</td>\n",
       "      <td>Toy / Game Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Woburn</td>\n",
       "      <td>43.759824</td>\n",
       "      <td>-79.225291</td>\n",
       "      <td>Burger King</td>\n",
       "      <td>43.759382</td>\n",
       "      <td>-79.225607</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>Woburn</td>\n",
       "      <td>43.759824</td>\n",
       "      <td>-79.225291</td>\n",
       "      <td>Walmart</td>\n",
       "      <td>43.758245</td>\n",
       "      <td>-79.229066</td>\n",
       "      <td>Big Box Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>Woburn</td>\n",
       "      <td>43.759824</td>\n",
       "      <td>-79.225291</td>\n",
       "      <td>Canadian Tire</td>\n",
       "      <td>43.758451</td>\n",
       "      <td>-79.226523</td>\n",
       "      <td>Furniture / Home Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>Woburn</td>\n",
       "      <td>43.759824</td>\n",
       "      <td>-79.225291</td>\n",
       "      <td>Tim Hortons</td>\n",
       "      <td>43.760028</td>\n",
       "      <td>-79.226545</td>\n",
       "      <td>Coffee Shop</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Woburn</td>\n",
       "      <td>43.759824</td>\n",
       "      <td>-79.225291</td>\n",
       "      <td>KFC</td>\n",
       "      <td>43.757943</td>\n",
       "      <td>-79.229483</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>Woburn</td>\n",
       "      <td>43.759824</td>\n",
       "      <td>-79.225291</td>\n",
       "      <td>India Town</td>\n",
       "      <td>43.760999</td>\n",
       "      <td>-79.225055</td>\n",
       "      <td>Indian Restaurant</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>Woburn</td>\n",
       "      <td>43.759824</td>\n",
       "      <td>-79.225291</td>\n",
       "      <td>Bus Stop: 54 &amp; 102</td>\n",
       "      <td>43.759720</td>\n",
       "      <td>-79.225416</td>\n",
       "      <td>Bus Station</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>Woburn</td>\n",
       "      <td>43.759824</td>\n",
       "      <td>-79.225291</td>\n",
       "      <td>Gamestop</td>\n",
       "      <td>43.758684</td>\n",
       "      <td>-79.227793</td>\n",
       "      <td>Electronics Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>Woburn</td>\n",
       "      <td>43.759824</td>\n",
       "      <td>-79.225291</td>\n",
       "      <td>McDonald's</td>\n",
       "      <td>43.757675</td>\n",
       "      <td>-79.229170</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>Woburn</td>\n",
       "      <td>43.759824</td>\n",
       "      <td>-79.225291</td>\n",
       "      <td>Hakim Optical</td>\n",
       "      <td>43.759540</td>\n",
       "      <td>-79.228964</td>\n",
       "      <td>Optical Shop</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>Woburn</td>\n",
       "      <td>43.759824</td>\n",
       "      <td>-79.225291</td>\n",
       "      <td>Dave's No Frills</td>\n",
       "      <td>43.757663</td>\n",
       "      <td>-79.230689</td>\n",
       "      <td>Grocery Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>105</th>\n",
       "      <td>Agincourt</td>\n",
       "      <td>43.785353</td>\n",
       "      <td>-79.278549</td>\n",
       "      <td>Tim Hortons</td>\n",
       "      <td>43.785637</td>\n",
       "      <td>-79.279215</td>\n",
       "      <td>Coffee Shop</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>106</th>\n",
       "      <td>Agincourt</td>\n",
       "      <td>43.785353</td>\n",
       "      <td>-79.278549</td>\n",
       "      <td>In Cheon House Korean &amp; Japanese Restaurant 인천관</td>\n",
       "      <td>43.786468</td>\n",
       "      <td>-79.275693</td>\n",
       "      <td>Korean Restaurant</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>107</th>\n",
       "      <td>Agincourt</td>\n",
       "      <td>43.785353</td>\n",
       "      <td>-79.278549</td>\n",
       "      <td>Maple Yip Seafood 陸羽海鮮酒家</td>\n",
       "      <td>43.784752</td>\n",
       "      <td>-79.277787</td>\n",
       "      <td>Chinese Restaurant</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>108</th>\n",
       "      <td>Agincourt</td>\n",
       "      <td>43.785353</td>\n",
       "      <td>-79.278549</td>\n",
       "      <td>Beef Noodle Restaurant 老李牛肉麵</td>\n",
       "      <td>43.785937</td>\n",
       "      <td>-79.276031</td>\n",
       "      <td>Chinese Restaurant</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109</th>\n",
       "      <td>Agincourt</td>\n",
       "      <td>43.785353</td>\n",
       "      <td>-79.278549</td>\n",
       "      <td>Congee King</td>\n",
       "      <td>43.785908</td>\n",
       "      <td>-79.276042</td>\n",
       "      <td>Chinese Restaurant</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110</th>\n",
       "      <td>Agincourt</td>\n",
       "      <td>43.785353</td>\n",
       "      <td>-79.278549</td>\n",
       "      <td>Fisherman Villa 褔臨門</td>\n",
       "      <td>43.787108</td>\n",
       "      <td>-79.275931</td>\n",
       "      <td>Hong Kong Restaurant</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>111</th>\n",
       "      <td>Agincourt</td>\n",
       "      <td>43.785353</td>\n",
       "      <td>-79.278549</td>\n",
       "      <td>Green Bamboo 青竹</td>\n",
       "      <td>43.785346</td>\n",
       "      <td>-79.277640</td>\n",
       "      <td>Vietnamese Restaurant</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>112</th>\n",
       "      <td>Agincourt</td>\n",
       "      <td>43.785353</td>\n",
       "      <td>-79.278549</td>\n",
       "      <td>Lung Tung BBQ Food</td>\n",
       "      <td>43.784836</td>\n",
       "      <td>-79.277837</td>\n",
       "      <td>Asian Restaurant</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>113</th>\n",
       "      <td>Agincourt</td>\n",
       "      <td>43.785353</td>\n",
       "      <td>-79.278549</td>\n",
       "      <td>Global Imperial Cuisine 國寶軒</td>\n",
       "      <td>43.786719</td>\n",
       "      <td>-79.274382</td>\n",
       "      <td>Cantonese Restaurant</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>114</th>\n",
       "      <td>Agincourt</td>\n",
       "      <td>43.785353</td>\n",
       "      <td>-79.278549</td>\n",
       "      <td>Agincourt GO Station</td>\n",
       "      <td>43.785802</td>\n",
       "      <td>-79.284324</td>\n",
       "      <td>Train Station</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>115</th>\n",
       "      <td>Clarks Corners, Sullivan, Tam O'Shanter</td>\n",
       "      <td>54.284760</td>\n",
       "      <td>-0.409034</td>\n",
       "      <td>Gianni's</td>\n",
       "      <td>54.283031</td>\n",
       "      <td>-0.405256</td>\n",
       "      <td>Italian Restaurant</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116</th>\n",
       "      <td>Clarks Corners, Sullivan, Tam O'Shanter</td>\n",
       "      <td>54.284760</td>\n",
       "      <td>-0.409034</td>\n",
       "      <td>Eat Me Cafe</td>\n",
       "      <td>54.280697</td>\n",
       "      <td>-0.406778</td>\n",
       "      <td>Restaurant</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>117</th>\n",
       "      <td>Clarks Corners, Sullivan, Tam O'Shanter</td>\n",
       "      <td>54.284760</td>\n",
       "      <td>-0.409034</td>\n",
       "      <td>Aldi</td>\n",
       "      <td>54.281965</td>\n",
       "      <td>-0.407199</td>\n",
       "      <td>Supermarket</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118</th>\n",
       "      <td>Clarks Corners, Sullivan, Tam O'Shanter</td>\n",
       "      <td>54.284760</td>\n",
       "      <td>-0.409034</td>\n",
       "      <td>Pizza Hut</td>\n",
       "      <td>54.280872</td>\n",
       "      <td>-0.407803</td>\n",
       "      <td>Pizza Place</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>119</th>\n",
       "      <td>Clarks Corners, Sullivan, Tam O'Shanter</td>\n",
       "      <td>54.284760</td>\n",
       "      <td>-0.409034</td>\n",
       "      <td>Domino's Pizza</td>\n",
       "      <td>54.283844</td>\n",
       "      <td>-0.403644</td>\n",
       "      <td>Pizza Place</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>120</th>\n",
       "      <td>Clarks Corners, Sullivan, Tam O'Shanter</td>\n",
       "      <td>54.284760</td>\n",
       "      <td>-0.409034</td>\n",
       "      <td>Tesco Express</td>\n",
       "      <td>54.283772</td>\n",
       "      <td>-0.403359</td>\n",
       "      <td>Grocery Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>121</th>\n",
       "      <td>Agincourt North, L'Amoreaux East, Milliken, St...</td>\n",
       "      <td>54.284760</td>\n",
       "      <td>-0.409034</td>\n",
       "      <td>Gianni's</td>\n",
       "      <td>54.283031</td>\n",
       "      <td>-0.405256</td>\n",
       "      <td>Italian Restaurant</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>122</th>\n",
       "      <td>Agincourt North, L'Amoreaux East, Milliken, St...</td>\n",
       "      <td>54.284760</td>\n",
       "      <td>-0.409034</td>\n",
       "      <td>Eat Me Cafe</td>\n",
       "      <td>54.280697</td>\n",
       "      <td>-0.406778</td>\n",
       "      <td>Restaurant</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>123</th>\n",
       "      <td>Agincourt North, L'Amoreaux East, Milliken, St...</td>\n",
       "      <td>54.284760</td>\n",
       "      <td>-0.409034</td>\n",
       "      <td>Aldi</td>\n",
       "      <td>54.281965</td>\n",
       "      <td>-0.407199</td>\n",
       "      <td>Supermarket</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>124</th>\n",
       "      <td>Agincourt North, L'Amoreaux East, Milliken, St...</td>\n",
       "      <td>54.284760</td>\n",
       "      <td>-0.409034</td>\n",
       "      <td>Pizza Hut</td>\n",
       "      <td>54.280872</td>\n",
       "      <td>-0.407803</td>\n",
       "      <td>Pizza Place</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>125</th>\n",
       "      <td>Agincourt North, L'Amoreaux East, Milliken, St...</td>\n",
       "      <td>54.284760</td>\n",
       "      <td>-0.409034</td>\n",
       "      <td>Domino's Pizza</td>\n",
       "      <td>54.283844</td>\n",
       "      <td>-0.403644</td>\n",
       "      <td>Pizza Place</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>126</th>\n",
       "      <td>Agincourt North, L'Amoreaux East, Milliken, St...</td>\n",
       "      <td>54.284760</td>\n",
       "      <td>-0.409034</td>\n",
       "      <td>Tesco Express</td>\n",
       "      <td>54.283772</td>\n",
       "      <td>-0.403359</td>\n",
       "      <td>Grocery Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>127</th>\n",
       "      <td>L'Amoreaux West</td>\n",
       "      <td>43.799003</td>\n",
       "      <td>-79.305967</td>\n",
       "      <td>Buddy Cafe</td>\n",
       "      <td>43.799156</td>\n",
       "      <td>-79.306280</td>\n",
       "      <td>Chinese Restaurant</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>128</th>\n",
       "      <td>L'Amoreaux West</td>\n",
       "      <td>43.799003</td>\n",
       "      <td>-79.305967</td>\n",
       "      <td>Divine Wok Restaurant</td>\n",
       "      <td>43.799102</td>\n",
       "      <td>-79.306483</td>\n",
       "      <td>Chinese Restaurant</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>129</th>\n",
       "      <td>L'Amoreaux West</td>\n",
       "      <td>43.799003</td>\n",
       "      <td>-79.305967</td>\n",
       "      <td>Birchwood Plaza</td>\n",
       "      <td>43.799600</td>\n",
       "      <td>-79.306225</td>\n",
       "      <td>Shopping Mall</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>130</th>\n",
       "      <td>L'Amoreaux West</td>\n",
       "      <td>43.799003</td>\n",
       "      <td>-79.305967</td>\n",
       "      <td>Tim Hortons</td>\n",
       "      <td>43.802199</td>\n",
       "      <td>-79.308731</td>\n",
       "      <td>Coffee Shop</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>131</th>\n",
       "      <td>L'Amoreaux West</td>\n",
       "      <td>43.799003</td>\n",
       "      <td>-79.305967</td>\n",
       "      <td>L'Amoreaux Sports Centre</td>\n",
       "      <td>43.803002</td>\n",
       "      <td>-79.304475</td>\n",
       "      <td>Athletics &amp; Sports</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>132</th>\n",
       "      <td>Upper Rouge</td>\n",
       "      <td>43.804930</td>\n",
       "      <td>-79.165837</td>\n",
       "      <td>Dean Park</td>\n",
       "      <td>43.804364</td>\n",
       "      <td>-79.169159</td>\n",
       "      <td>Park</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>133</th>\n",
       "      <td>Upper Rouge</td>\n",
       "      <td>43.804930</td>\n",
       "      <td>-79.165837</td>\n",
       "      <td>Rexall I.D.A. Pan Pharmacy</td>\n",
       "      <td>43.804081</td>\n",
       "      <td>-79.169654</td>\n",
       "      <td>Pharmacy</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>134</th>\n",
       "      <td>Upper Rouge</td>\n",
       "      <td>43.804930</td>\n",
       "      <td>-79.165837</td>\n",
       "      <td>Paul's Breakfast &amp; Burgers</td>\n",
       "      <td>43.803835</td>\n",
       "      <td>-79.169825</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>135 rows × 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                          Neighborhood  Neighborhood Latitude  \\\n",
       "0                                       Rouge, Malvern              43.813464   \n",
       "1                                       Rouge, Malvern              43.813464   \n",
       "2               Highland Creek, Rouge Hill, Port Union              54.284760   \n",
       "3               Highland Creek, Rouge Hill, Port Union              54.284760   \n",
       "4               Highland Creek, Rouge Hill, Port Union              54.284760   \n",
       "5               Highland Creek, Rouge Hill, Port Union              54.284760   \n",
       "6               Highland Creek, Rouge Hill, Port Union              54.284760   \n",
       "7               Highland Creek, Rouge Hill, Port Union              54.284760   \n",
       "8                    Guildwood, Morningside, West Hill              43.753480   \n",
       "9                                               Woburn              43.759824   \n",
       "10                                              Woburn              43.759824   \n",
       "11                                              Woburn              43.759824   \n",
       "12                                              Woburn              43.759824   \n",
       "13                                              Woburn              43.759824   \n",
       "14                                              Woburn              43.759824   \n",
       "15                                              Woburn              43.759824   \n",
       "16                                              Woburn              43.759824   \n",
       "17                                              Woburn              43.759824   \n",
       "18                                              Woburn              43.759824   \n",
       "19                                              Woburn              43.759824   \n",
       "20                                              Woburn              43.759824   \n",
       "21                                              Woburn              43.759824   \n",
       "22                                              Woburn              43.759824   \n",
       "23                                              Woburn              43.759824   \n",
       "24                                              Woburn              43.759824   \n",
       "25                                              Woburn              43.759824   \n",
       "26                                              Woburn              43.759824   \n",
       "27                                              Woburn              43.759824   \n",
       "28                                              Woburn              43.759824   \n",
       "29                                              Woburn              43.759824   \n",
       "..                                                 ...                    ...   \n",
       "105                                          Agincourt              43.785353   \n",
       "106                                          Agincourt              43.785353   \n",
       "107                                          Agincourt              43.785353   \n",
       "108                                          Agincourt              43.785353   \n",
       "109                                          Agincourt              43.785353   \n",
       "110                                          Agincourt              43.785353   \n",
       "111                                          Agincourt              43.785353   \n",
       "112                                          Agincourt              43.785353   \n",
       "113                                          Agincourt              43.785353   \n",
       "114                                          Agincourt              43.785353   \n",
       "115            Clarks Corners, Sullivan, Tam O'Shanter              54.284760   \n",
       "116            Clarks Corners, Sullivan, Tam O'Shanter              54.284760   \n",
       "117            Clarks Corners, Sullivan, Tam O'Shanter              54.284760   \n",
       "118            Clarks Corners, Sullivan, Tam O'Shanter              54.284760   \n",
       "119            Clarks Corners, Sullivan, Tam O'Shanter              54.284760   \n",
       "120            Clarks Corners, Sullivan, Tam O'Shanter              54.284760   \n",
       "121  Agincourt North, L'Amoreaux East, Milliken, St...              54.284760   \n",
       "122  Agincourt North, L'Amoreaux East, Milliken, St...              54.284760   \n",
       "123  Agincourt North, L'Amoreaux East, Milliken, St...              54.284760   \n",
       "124  Agincourt North, L'Amoreaux East, Milliken, St...              54.284760   \n",
       "125  Agincourt North, L'Amoreaux East, Milliken, St...              54.284760   \n",
       "126  Agincourt North, L'Amoreaux East, Milliken, St...              54.284760   \n",
       "127                                    L'Amoreaux West              43.799003   \n",
       "128                                    L'Amoreaux West              43.799003   \n",
       "129                                    L'Amoreaux West              43.799003   \n",
       "130                                    L'Amoreaux West              43.799003   \n",
       "131                                    L'Amoreaux West              43.799003   \n",
       "132                                        Upper Rouge              43.804930   \n",
       "133                                        Upper Rouge              43.804930   \n",
       "134                                        Upper Rouge              43.804930   \n",
       "\n",
       "     Neighborhood Longitude                                            Venue  \\\n",
       "0                -79.205981                     Butler Drain & Waterproofing   \n",
       "1                -79.205981                                          Mezbaan   \n",
       "2                 -0.409034                                         Gianni's   \n",
       "3                 -0.409034                                      Eat Me Cafe   \n",
       "4                 -0.409034                                             Aldi   \n",
       "5                 -0.409034                                        Pizza Hut   \n",
       "6                 -0.409034                                   Domino's Pizza   \n",
       "7                 -0.409034                                    Tesco Express   \n",
       "8                -79.179995                                  Grey Abbey Park   \n",
       "9                -79.225291      GoodLife Fitness Scarborough Cedarbrae Mall   \n",
       "10               -79.225291                               Shoppers Drug Mart   \n",
       "11               -79.225291                                       Pho Dau Bo   \n",
       "12               -79.225291                                Staples Cedarbrae   \n",
       "13               -79.225291                                  TD Canada Trust   \n",
       "14               -79.225291                                      Pizza Pizza   \n",
       "15               -79.225291                                   The Beer Store   \n",
       "16               -79.225291                                        Dollarama   \n",
       "17               -79.225291                                      Tim Hortons   \n",
       "18               -79.225291                                        Toys\"R\"Us   \n",
       "19               -79.225291                                      Burger King   \n",
       "20               -79.225291                                          Walmart   \n",
       "21               -79.225291                                    Canadian Tire   \n",
       "22               -79.225291                                      Tim Hortons   \n",
       "23               -79.225291                                              KFC   \n",
       "24               -79.225291                                       India Town   \n",
       "25               -79.225291                               Bus Stop: 54 & 102   \n",
       "26               -79.225291                                         Gamestop   \n",
       "27               -79.225291                                       McDonald's   \n",
       "28               -79.225291                                    Hakim Optical   \n",
       "29               -79.225291                                 Dave's No Frills   \n",
       "..                      ...                                              ...   \n",
       "105              -79.278549                                      Tim Hortons   \n",
       "106              -79.278549  In Cheon House Korean & Japanese Restaurant 인천관   \n",
       "107              -79.278549                         Maple Yip Seafood 陸羽海鮮酒家   \n",
       "108              -79.278549                     Beef Noodle Restaurant 老李牛肉麵   \n",
       "109              -79.278549                                      Congee King   \n",
       "110              -79.278549                              Fisherman Villa 褔臨門   \n",
       "111              -79.278549                                  Green Bamboo 青竹   \n",
       "112              -79.278549                               Lung Tung BBQ Food   \n",
       "113              -79.278549                      Global Imperial Cuisine 國寶軒   \n",
       "114              -79.278549                             Agincourt GO Station   \n",
       "115               -0.409034                                         Gianni's   \n",
       "116               -0.409034                                      Eat Me Cafe   \n",
       "117               -0.409034                                             Aldi   \n",
       "118               -0.409034                                        Pizza Hut   \n",
       "119               -0.409034                                   Domino's Pizza   \n",
       "120               -0.409034                                    Tesco Express   \n",
       "121               -0.409034                                         Gianni's   \n",
       "122               -0.409034                                      Eat Me Cafe   \n",
       "123               -0.409034                                             Aldi   \n",
       "124               -0.409034                                        Pizza Hut   \n",
       "125               -0.409034                                   Domino's Pizza   \n",
       "126               -0.409034                                    Tesco Express   \n",
       "127              -79.305967                                       Buddy Cafe   \n",
       "128              -79.305967                            Divine Wok Restaurant   \n",
       "129              -79.305967                                  Birchwood Plaza   \n",
       "130              -79.305967                                      Tim Hortons   \n",
       "131              -79.305967                         L'Amoreaux Sports Centre   \n",
       "132              -79.165837                                        Dean Park   \n",
       "133              -79.165837                       Rexall I.D.A. Pan Pharmacy   \n",
       "134              -79.165837                       Paul's Breakfast & Burgers   \n",
       "\n",
       "     Venue Latitude  Venue Longitude                 Venue Category  \n",
       "0         43.812284       -79.206052     Construction & Landscaping  \n",
       "1         43.816756       -79.210172              Indian Restaurant  \n",
       "2         54.283031        -0.405256             Italian Restaurant  \n",
       "3         54.280697        -0.406778                     Restaurant  \n",
       "4         54.281965        -0.407199                    Supermarket  \n",
       "5         54.280872        -0.407803                    Pizza Place  \n",
       "6         54.283844        -0.403644                    Pizza Place  \n",
       "7         54.283772        -0.403359                  Grocery Store  \n",
       "8         43.755101       -79.174862                           Park  \n",
       "9         43.758303       -79.228533                            Gym  \n",
       "10        43.760718       -79.224505                       Pharmacy  \n",
       "11        43.761286       -79.225170          Vietnamese Restaurant  \n",
       "12        43.759851       -79.228335  Paper / Office Supplies Store  \n",
       "13        43.761520       -79.226557                           Bank  \n",
       "14        43.759321       -79.224929                    Pizza Place  \n",
       "15        43.759714       -79.225487                     Beer Store  \n",
       "16        43.758511       -79.227047                 Discount Store  \n",
       "17        43.757813       -79.228442                    Coffee Shop  \n",
       "18        43.758088       -79.227287               Toy / Game Store  \n",
       "19        43.759382       -79.225607           Fast Food Restaurant  \n",
       "20        43.758245       -79.229066                  Big Box Store  \n",
       "21        43.758451       -79.226523         Furniture / Home Store  \n",
       "22        43.760028       -79.226545                    Coffee Shop  \n",
       "23        43.757943       -79.229483           Fast Food Restaurant  \n",
       "24        43.760999       -79.225055              Indian Restaurant  \n",
       "25        43.759720       -79.225416                    Bus Station  \n",
       "26        43.758684       -79.227793              Electronics Store  \n",
       "27        43.757675       -79.229170           Fast Food Restaurant  \n",
       "28        43.759540       -79.228964                   Optical Shop  \n",
       "29        43.757663       -79.230689                  Grocery Store  \n",
       "..              ...              ...                            ...  \n",
       "105       43.785637       -79.279215                    Coffee Shop  \n",
       "106       43.786468       -79.275693              Korean Restaurant  \n",
       "107       43.784752       -79.277787             Chinese Restaurant  \n",
       "108       43.785937       -79.276031             Chinese Restaurant  \n",
       "109       43.785908       -79.276042             Chinese Restaurant  \n",
       "110       43.787108       -79.275931           Hong Kong Restaurant  \n",
       "111       43.785346       -79.277640          Vietnamese Restaurant  \n",
       "112       43.784836       -79.277837               Asian Restaurant  \n",
       "113       43.786719       -79.274382           Cantonese Restaurant  \n",
       "114       43.785802       -79.284324                  Train Station  \n",
       "115       54.283031        -0.405256             Italian Restaurant  \n",
       "116       54.280697        -0.406778                     Restaurant  \n",
       "117       54.281965        -0.407199                    Supermarket  \n",
       "118       54.280872        -0.407803                    Pizza Place  \n",
       "119       54.283844        -0.403644                    Pizza Place  \n",
       "120       54.283772        -0.403359                  Grocery Store  \n",
       "121       54.283031        -0.405256             Italian Restaurant  \n",
       "122       54.280697        -0.406778                     Restaurant  \n",
       "123       54.281965        -0.407199                    Supermarket  \n",
       "124       54.280872        -0.407803                    Pizza Place  \n",
       "125       54.283844        -0.403644                    Pizza Place  \n",
       "126       54.283772        -0.403359                  Grocery Store  \n",
       "127       43.799156       -79.306280             Chinese Restaurant  \n",
       "128       43.799102       -79.306483             Chinese Restaurant  \n",
       "129       43.799600       -79.306225                  Shopping Mall  \n",
       "130       43.802199       -79.308731                    Coffee Shop  \n",
       "131       43.803002       -79.304475             Athletics & Sports  \n",
       "132       43.804364       -79.169159                           Park  \n",
       "133       43.804081       -79.169654                       Pharmacy  \n",
       "134       43.803835       -79.169825           Fast Food Restaurant  \n",
       "\n",
       "[135 rows x 7 columns]"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "scarborough_venues = getNearbyVenues(names=scarborough_data['Neighborhood'],\n",
    "                                   latitudes=scarborough_data['Latitude'],\n",
    "                                   longitudes=scarborough_data['Longitude']\n",
    "                                  )\n",
    "\n",
    "scarborough_venues"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(135, 7)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Neighborhood</th>\n",
       "      <th>Neighborhood Latitude</th>\n",
       "      <th>Neighborhood Longitude</th>\n",
       "      <th>Venue</th>\n",
       "      <th>Venue Latitude</th>\n",
       "      <th>Venue Longitude</th>\n",
       "      <th>Venue Category</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Rouge, Malvern</td>\n",
       "      <td>43.813464</td>\n",
       "      <td>-79.205981</td>\n",
       "      <td>Butler Drain &amp; Waterproofing</td>\n",
       "      <td>43.812284</td>\n",
       "      <td>-79.206052</td>\n",
       "      <td>Construction &amp; Landscaping</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Rouge, Malvern</td>\n",
       "      <td>43.813464</td>\n",
       "      <td>-79.205981</td>\n",
       "      <td>Mezbaan</td>\n",
       "      <td>43.816756</td>\n",
       "      <td>-79.210172</td>\n",
       "      <td>Indian Restaurant</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Highland Creek, Rouge Hill, Port Union</td>\n",
       "      <td>54.284760</td>\n",
       "      <td>-0.409034</td>\n",
       "      <td>Gianni's</td>\n",
       "      <td>54.283031</td>\n",
       "      <td>-0.405256</td>\n",
       "      <td>Italian Restaurant</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Highland Creek, Rouge Hill, Port Union</td>\n",
       "      <td>54.284760</td>\n",
       "      <td>-0.409034</td>\n",
       "      <td>Eat Me Cafe</td>\n",
       "      <td>54.280697</td>\n",
       "      <td>-0.406778</td>\n",
       "      <td>Restaurant</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Highland Creek, Rouge Hill, Port Union</td>\n",
       "      <td>54.284760</td>\n",
       "      <td>-0.409034</td>\n",
       "      <td>Aldi</td>\n",
       "      <td>54.281965</td>\n",
       "      <td>-0.407199</td>\n",
       "      <td>Supermarket</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                             Neighborhood  Neighborhood Latitude  \\\n",
       "0                          Rouge, Malvern              43.813464   \n",
       "1                          Rouge, Malvern              43.813464   \n",
       "2  Highland Creek, Rouge Hill, Port Union              54.284760   \n",
       "3  Highland Creek, Rouge Hill, Port Union              54.284760   \n",
       "4  Highland Creek, Rouge Hill, Port Union              54.284760   \n",
       "\n",
       "   Neighborhood Longitude                         Venue  Venue Latitude  \\\n",
       "0              -79.205981  Butler Drain & Waterproofing       43.812284   \n",
       "1              -79.205981                       Mezbaan       43.816756   \n",
       "2               -0.409034                      Gianni's       54.283031   \n",
       "3               -0.409034                   Eat Me Cafe       54.280697   \n",
       "4               -0.409034                          Aldi       54.281965   \n",
       "\n",
       "   Venue Longitude              Venue Category  \n",
       "0       -79.206052  Construction & Landscaping  \n",
       "1       -79.210172           Indian Restaurant  \n",
       "2        -0.405256          Italian Restaurant  \n",
       "3        -0.406778                  Restaurant  \n",
       "4        -0.407199                 Supermarket  "
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(scarborough_venues.shape)\n",
    "scarborough_venues.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Checking the venues returned for each neighborhood"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Neighborhood Latitude</th>\n",
       "      <th>Neighborhood Longitude</th>\n",
       "      <th>Venue</th>\n",
       "      <th>Venue Latitude</th>\n",
       "      <th>Venue Longitude</th>\n",
       "      <th>Venue Category</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Neighborhood</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Agincourt</th>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Agincourt North, L'Amoreaux East, Milliken, Steeles East</th>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Birch Cliff, Cliffside West</th>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cedarbrae</th>\n",
       "      <td>23</td>\n",
       "      <td>23</td>\n",
       "      <td>23</td>\n",
       "      <td>23</td>\n",
       "      <td>23</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Clairlea, Golden Mile, Oakridge</th>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Clarks Corners, Sullivan, Tam O'Shanter</th>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cliffcrest, Cliffside, Scarborough Village West</th>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Dorset Park, Scarborough Town Centre, Wexford Heights</th>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>East Birchmount Park, Ionview, Kennedy Park</th>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Guildwood, Morningside, West Hill</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Highland Creek, Rouge Hill, Port Union</th>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>L'Amoreaux West</th>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Maryvale, Wexford</th>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Rouge, Malvern</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Scarborough Village</th>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Upper Rouge</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Woburn</th>\n",
       "      <td>21</td>\n",
       "      <td>21</td>\n",
       "      <td>21</td>\n",
       "      <td>21</td>\n",
       "      <td>21</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                    Neighborhood Latitude  \\\n",
       "Neighborhood                                                                \n",
       "Agincourt                                                              11   \n",
       "Agincourt North, L'Amoreaux East, Milliken, Ste...                      6   \n",
       "Birch Cliff, Cliffside West                                             6   \n",
       "Cedarbrae                                                              23   \n",
       "Clairlea, Golden Mile, Oakridge                                         6   \n",
       "Clarks Corners, Sullivan, Tam O'Shanter                                 6   \n",
       "Cliffcrest, Cliffside, Scarborough Village West                         6   \n",
       "Dorset Park, Scarborough Town Centre, Wexford H...                      6   \n",
       "East Birchmount Park, Ionview, Kennedy Park                             6   \n",
       "Guildwood, Morningside, West Hill                                       1   \n",
       "Highland Creek, Rouge Hill, Port Union                                  6   \n",
       "L'Amoreaux West                                                         5   \n",
       "Maryvale, Wexford                                                      12   \n",
       "Rouge, Malvern                                                          2   \n",
       "Scarborough Village                                                     9   \n",
       "Upper Rouge                                                             3   \n",
       "Woburn                                                                 21   \n",
       "\n",
       "                                                    Neighborhood Longitude  \\\n",
       "Neighborhood                                                                 \n",
       "Agincourt                                                               11   \n",
       "Agincourt North, L'Amoreaux East, Milliken, Ste...                       6   \n",
       "Birch Cliff, Cliffside West                                              6   \n",
       "Cedarbrae                                                               23   \n",
       "Clairlea, Golden Mile, Oakridge                                          6   \n",
       "Clarks Corners, Sullivan, Tam O'Shanter                                  6   \n",
       "Cliffcrest, Cliffside, Scarborough Village West                          6   \n",
       "Dorset Park, Scarborough Town Centre, Wexford H...                       6   \n",
       "East Birchmount Park, Ionview, Kennedy Park                              6   \n",
       "Guildwood, Morningside, West Hill                                        1   \n",
       "Highland Creek, Rouge Hill, Port Union                                   6   \n",
       "L'Amoreaux West                                                          5   \n",
       "Maryvale, Wexford                                                       12   \n",
       "Rouge, Malvern                                                           2   \n",
       "Scarborough Village                                                      9   \n",
       "Upper Rouge                                                              3   \n",
       "Woburn                                                                  21   \n",
       "\n",
       "                                                    Venue  Venue Latitude  \\\n",
       "Neighborhood                                                                \n",
       "Agincourt                                              11              11   \n",
       "Agincourt North, L'Amoreaux East, Milliken, Ste...      6               6   \n",
       "Birch Cliff, Cliffside West                             6               6   \n",
       "Cedarbrae                                              23              23   \n",
       "Clairlea, Golden Mile, Oakridge                         6               6   \n",
       "Clarks Corners, Sullivan, Tam O'Shanter                 6               6   \n",
       "Cliffcrest, Cliffside, Scarborough Village West         6               6   \n",
       "Dorset Park, Scarborough Town Centre, Wexford H...      6               6   \n",
       "East Birchmount Park, Ionview, Kennedy Park             6               6   \n",
       "Guildwood, Morningside, West Hill                       1               1   \n",
       "Highland Creek, Rouge Hill, Port Union                  6               6   \n",
       "L'Amoreaux West                                         5               5   \n",
       "Maryvale, Wexford                                      12              12   \n",
       "Rouge, Malvern                                          2               2   \n",
       "Scarborough Village                                     9               9   \n",
       "Upper Rouge                                             3               3   \n",
       "Woburn                                                 21              21   \n",
       "\n",
       "                                                    Venue Longitude  \\\n",
       "Neighborhood                                                          \n",
       "Agincourt                                                        11   \n",
       "Agincourt North, L'Amoreaux East, Milliken, Ste...                6   \n",
       "Birch Cliff, Cliffside West                                       6   \n",
       "Cedarbrae                                                        23   \n",
       "Clairlea, Golden Mile, Oakridge                                   6   \n",
       "Clarks Corners, Sullivan, Tam O'Shanter                           6   \n",
       "Cliffcrest, Cliffside, Scarborough Village West                   6   \n",
       "Dorset Park, Scarborough Town Centre, Wexford H...                6   \n",
       "East Birchmount Park, Ionview, Kennedy Park                       6   \n",
       "Guildwood, Morningside, West Hill                                 1   \n",
       "Highland Creek, Rouge Hill, Port Union                            6   \n",
       "L'Amoreaux West                                                   5   \n",
       "Maryvale, Wexford                                                12   \n",
       "Rouge, Malvern                                                    2   \n",
       "Scarborough Village                                               9   \n",
       "Upper Rouge                                                       3   \n",
       "Woburn                                                           21   \n",
       "\n",
       "                                                    Venue Category  \n",
       "Neighborhood                                                        \n",
       "Agincourt                                                       11  \n",
       "Agincourt North, L'Amoreaux East, Milliken, Ste...               6  \n",
       "Birch Cliff, Cliffside West                                      6  \n",
       "Cedarbrae                                                       23  \n",
       "Clairlea, Golden Mile, Oakridge                                  6  \n",
       "Clarks Corners, Sullivan, Tam O'Shanter                          6  \n",
       "Cliffcrest, Cliffside, Scarborough Village West                  6  \n",
       "Dorset Park, Scarborough Town Centre, Wexford H...               6  \n",
       "East Birchmount Park, Ionview, Kennedy Park                      6  \n",
       "Guildwood, Morningside, West Hill                                1  \n",
       "Highland Creek, Rouge Hill, Port Union                           6  \n",
       "L'Amoreaux West                                                  5  \n",
       "Maryvale, Wexford                                               12  \n",
       "Rouge, Malvern                                                   2  \n",
       "Scarborough Village                                              9  \n",
       "Upper Rouge                                                      3  \n",
       "Woburn                                                          21  "
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "scarborough_venues.groupby('Neighborhood').count()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Finding the unique catgories returned"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "There are 44 uniques categories.\n"
     ]
    }
   ],
   "source": [
    "print('There are {} uniques categories.'.format(len(scarborough_venues['Venue Category'].unique())))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h4>Let us now analyze each neighbourhood</h4>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Neighborhood</th>\n",
       "      <th>Arts &amp; Crafts Store</th>\n",
       "      <th>Asian Restaurant</th>\n",
       "      <th>Athletics &amp; Sports</th>\n",
       "      <th>Badminton Court</th>\n",
       "      <th>Bank</th>\n",
       "      <th>Beer Store</th>\n",
       "      <th>Big Box Store</th>\n",
       "      <th>Breakfast Spot</th>\n",
       "      <th>Bus Station</th>\n",
       "      <th>...</th>\n",
       "      <th>Restaurant</th>\n",
       "      <th>Shopping Mall</th>\n",
       "      <th>Soccer Field</th>\n",
       "      <th>Steakhouse</th>\n",
       "      <th>Supermarket</th>\n",
       "      <th>Toy / Game Store</th>\n",
       "      <th>Train Station</th>\n",
       "      <th>Video Game Store</th>\n",
       "      <th>Vietnamese Restaurant</th>\n",
       "      <th>Warehouse Store</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Rouge, Malvern</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Rouge, Malvern</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Highland Creek, Rouge Hill, Port Union</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Highland Creek, Rouge Hill, Port Union</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Highland Creek, Rouge Hill, Port Union</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 45 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                             Neighborhood  Arts & Crafts Store  \\\n",
       "0                          Rouge, Malvern                    0   \n",
       "1                          Rouge, Malvern                    0   \n",
       "2  Highland Creek, Rouge Hill, Port Union                    0   \n",
       "3  Highland Creek, Rouge Hill, Port Union                    0   \n",
       "4  Highland Creek, Rouge Hill, Port Union                    0   \n",
       "\n",
       "   Asian Restaurant  Athletics & Sports  Badminton Court  Bank  Beer Store  \\\n",
       "0                 0                   0                0     0           0   \n",
       "1                 0                   0                0     0           0   \n",
       "2                 0                   0                0     0           0   \n",
       "3                 0                   0                0     0           0   \n",
       "4                 0                   0                0     0           0   \n",
       "\n",
       "   Big Box Store  Breakfast Spot  Bus Station       ...         Restaurant  \\\n",
       "0              0               0            0       ...                  0   \n",
       "1              0               0            0       ...                  0   \n",
       "2              0               0            0       ...                  0   \n",
       "3              0               0            0       ...                  1   \n",
       "4              0               0            0       ...                  0   \n",
       "\n",
       "   Shopping Mall  Soccer Field  Steakhouse  Supermarket  Toy / Game Store  \\\n",
       "0              0             0           0            0                 0   \n",
       "1              0             0           0            0                 0   \n",
       "2              0             0           0            0                 0   \n",
       "3              0             0           0            0                 0   \n",
       "4              0             0           0            1                 0   \n",
       "\n",
       "   Train Station  Video Game Store  Vietnamese Restaurant  Warehouse Store  \n",
       "0              0                 0                      0                0  \n",
       "1              0                 0                      0                0  \n",
       "2              0                 0                      0                0  \n",
       "3              0                 0                      0                0  \n",
       "4              0                 0                      0                0  \n",
       "\n",
       "[5 rows x 45 columns]"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# one hot encoding\n",
    "scarborough_onehot = pd.get_dummies(scarborough_venues[['Venue Category']], prefix=\"\", prefix_sep=\"\")\n",
    "\n",
    "# add neighborhood column back to dataframe\n",
    "scarborough_onehot['Neighborhood'] = scarborough_venues['Neighborhood'] \n",
    "\n",
    "# move neighborhood column to the first column\n",
    "fixed_columns = [scarborough_onehot.columns[-1]] + list(scarborough_onehot.columns[:-1])\n",
    "scarborough_onehot = scarborough_onehot[fixed_columns]\n",
    "\n",
    "scarborough_onehot.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(135, 45)"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "scarborough_onehot.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Neighborhood</th>\n",
       "      <th>Arts &amp; Crafts Store</th>\n",
       "      <th>Asian Restaurant</th>\n",
       "      <th>Athletics &amp; Sports</th>\n",
       "      <th>Badminton Court</th>\n",
       "      <th>Bank</th>\n",
       "      <th>Beer Store</th>\n",
       "      <th>Big Box Store</th>\n",
       "      <th>Breakfast Spot</th>\n",
       "      <th>Bus Station</th>\n",
       "      <th>...</th>\n",
       "      <th>Restaurant</th>\n",
       "      <th>Shopping Mall</th>\n",
       "      <th>Soccer Field</th>\n",
       "      <th>Steakhouse</th>\n",
       "      <th>Supermarket</th>\n",
       "      <th>Toy / Game Store</th>\n",
       "      <th>Train Station</th>\n",
       "      <th>Video Game Store</th>\n",
       "      <th>Vietnamese Restaurant</th>\n",
       "      <th>Warehouse Store</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Agincourt</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.181818</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.090909</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.090909</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Agincourt North, L'Amoreaux East, Milliken, St...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.166667</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.166667</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Birch Cliff, Cliffside West</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.166667</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.166667</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Cedarbrae</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.043478</td>\n",
       "      <td>0.043478</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.043478</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.043478</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.043478</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Clairlea, Golden Mile, Oakridge</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.166667</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.166667</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Clarks Corners, Sullivan, Tam O'Shanter</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.166667</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.166667</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Cliffcrest, Cliffside, Scarborough Village West</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.166667</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.166667</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Dorset Park, Scarborough Town Centre, Wexford ...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.166667</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.166667</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>East Birchmount Park, Ionview, Kennedy Park</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.166667</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.166667</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Guildwood, Morningside, West Hill</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Highland Creek, Rouge Hill, Port Union</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.166667</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.166667</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>L'Amoreaux West</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.2</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.200000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Maryvale, Wexford</td>\n",
       "      <td>0.083333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.083333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.083333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.083333</td>\n",
       "      <td>0.083333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.083333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Rouge, Malvern</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Scarborough Village</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Upper Rouge</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Woburn</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.047619</td>\n",
       "      <td>0.047619</td>\n",
       "      <td>0.047619</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.047619</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.047619</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.047619</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>17 rows × 45 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                         Neighborhood  Arts & Crafts Store  \\\n",
       "0                                           Agincourt             0.000000   \n",
       "1   Agincourt North, L'Amoreaux East, Milliken, St...             0.000000   \n",
       "2                         Birch Cliff, Cliffside West             0.000000   \n",
       "3                                           Cedarbrae             0.000000   \n",
       "4                     Clairlea, Golden Mile, Oakridge             0.000000   \n",
       "5             Clarks Corners, Sullivan, Tam O'Shanter             0.000000   \n",
       "6     Cliffcrest, Cliffside, Scarborough Village West             0.000000   \n",
       "7   Dorset Park, Scarborough Town Centre, Wexford ...             0.000000   \n",
       "8         East Birchmount Park, Ionview, Kennedy Park             0.000000   \n",
       "9                   Guildwood, Morningside, West Hill             0.000000   \n",
       "10             Highland Creek, Rouge Hill, Port Union             0.000000   \n",
       "11                                    L'Amoreaux West             0.000000   \n",
       "12                                  Maryvale, Wexford             0.083333   \n",
       "13                                     Rouge, Malvern             0.000000   \n",
       "14                                Scarborough Village             0.000000   \n",
       "15                                        Upper Rouge             0.000000   \n",
       "16                                             Woburn             0.000000   \n",
       "\n",
       "    Asian Restaurant  Athletics & Sports  Badminton Court      Bank  \\\n",
       "0           0.181818                 0.0         0.000000  0.000000   \n",
       "1           0.000000                 0.0         0.000000  0.000000   \n",
       "2           0.000000                 0.0         0.000000  0.000000   \n",
       "3           0.000000                 0.0         0.000000  0.000000   \n",
       "4           0.000000                 0.0         0.000000  0.000000   \n",
       "5           0.000000                 0.0         0.000000  0.000000   \n",
       "6           0.000000                 0.0         0.000000  0.000000   \n",
       "7           0.000000                 0.0         0.000000  0.000000   \n",
       "8           0.000000                 0.0         0.000000  0.000000   \n",
       "9           0.000000                 0.0         0.000000  0.000000   \n",
       "10          0.000000                 0.0         0.000000  0.000000   \n",
       "11          0.000000                 0.2         0.000000  0.000000   \n",
       "12          0.000000                 0.0         0.083333  0.000000   \n",
       "13          0.000000                 0.0         0.000000  0.000000   \n",
       "14          0.000000                 0.0         0.000000  0.000000   \n",
       "15          0.000000                 0.0         0.000000  0.000000   \n",
       "16          0.000000                 0.0         0.000000  0.047619   \n",
       "\n",
       "    Beer Store  Big Box Store  Breakfast Spot  Bus Station       ...         \\\n",
       "0     0.000000       0.000000        0.000000     0.000000       ...          \n",
       "1     0.000000       0.000000        0.000000     0.000000       ...          \n",
       "2     0.000000       0.000000        0.000000     0.000000       ...          \n",
       "3     0.043478       0.043478        0.000000     0.000000       ...          \n",
       "4     0.000000       0.000000        0.000000     0.000000       ...          \n",
       "5     0.000000       0.000000        0.000000     0.000000       ...          \n",
       "6     0.000000       0.000000        0.000000     0.000000       ...          \n",
       "7     0.000000       0.000000        0.000000     0.000000       ...          \n",
       "8     0.000000       0.000000        0.000000     0.000000       ...          \n",
       "9     0.000000       0.000000        0.000000     0.000000       ...          \n",
       "10    0.000000       0.000000        0.000000     0.000000       ...          \n",
       "11    0.000000       0.000000        0.000000     0.000000       ...          \n",
       "12    0.000000       0.000000        0.083333     0.000000       ...          \n",
       "13    0.000000       0.000000        0.000000     0.000000       ...          \n",
       "14    0.000000       0.000000        0.000000     0.000000       ...          \n",
       "15    0.000000       0.000000        0.000000     0.000000       ...          \n",
       "16    0.047619       0.047619        0.000000     0.047619       ...          \n",
       "\n",
       "    Restaurant  Shopping Mall  Soccer Field  Steakhouse  Supermarket  \\\n",
       "0     0.000000       0.000000      0.000000    0.000000     0.000000   \n",
       "1     0.166667       0.000000      0.000000    0.000000     0.166667   \n",
       "2     0.166667       0.000000      0.000000    0.000000     0.166667   \n",
       "3     0.000000       0.043478      0.000000    0.000000     0.000000   \n",
       "4     0.166667       0.000000      0.000000    0.000000     0.166667   \n",
       "5     0.166667       0.000000      0.000000    0.000000     0.166667   \n",
       "6     0.166667       0.000000      0.000000    0.000000     0.166667   \n",
       "7     0.166667       0.000000      0.000000    0.000000     0.166667   \n",
       "8     0.166667       0.000000      0.000000    0.000000     0.166667   \n",
       "9     0.000000       0.000000      0.000000    0.000000     0.000000   \n",
       "10    0.166667       0.000000      0.000000    0.000000     0.166667   \n",
       "11    0.000000       0.200000      0.000000    0.000000     0.000000   \n",
       "12    0.000000       0.000000      0.083333    0.083333     0.000000   \n",
       "13    0.000000       0.000000      0.000000    0.000000     0.000000   \n",
       "14    0.000000       0.000000      0.000000    0.000000     0.000000   \n",
       "15    0.000000       0.000000      0.000000    0.000000     0.000000   \n",
       "16    0.000000       0.000000      0.000000    0.000000     0.000000   \n",
       "\n",
       "    Toy / Game Store  Train Station  Video Game Store  Vietnamese Restaurant  \\\n",
       "0           0.000000       0.090909          0.000000               0.090909   \n",
       "1           0.000000       0.000000          0.000000               0.000000   \n",
       "2           0.000000       0.000000          0.000000               0.000000   \n",
       "3           0.043478       0.000000          0.043478               0.000000   \n",
       "4           0.000000       0.000000          0.000000               0.000000   \n",
       "5           0.000000       0.000000          0.000000               0.000000   \n",
       "6           0.000000       0.000000          0.000000               0.000000   \n",
       "7           0.000000       0.000000          0.000000               0.000000   \n",
       "8           0.000000       0.000000          0.000000               0.000000   \n",
       "9           0.000000       0.000000          0.000000               0.000000   \n",
       "10          0.000000       0.000000          0.000000               0.000000   \n",
       "11          0.000000       0.000000          0.000000               0.000000   \n",
       "12          0.000000       0.000000          0.000000               0.000000   \n",
       "13          0.000000       0.000000          0.000000               0.000000   \n",
       "14          0.000000       0.000000          0.000000               0.000000   \n",
       "15          0.000000       0.000000          0.000000               0.000000   \n",
       "16          0.047619       0.000000          0.000000               0.047619   \n",
       "\n",
       "    Warehouse Store  \n",
       "0          0.000000  \n",
       "1          0.000000  \n",
       "2          0.000000  \n",
       "3          0.000000  \n",
       "4          0.000000  \n",
       "5          0.000000  \n",
       "6          0.000000  \n",
       "7          0.000000  \n",
       "8          0.000000  \n",
       "9          0.000000  \n",
       "10         0.000000  \n",
       "11         0.000000  \n",
       "12         0.083333  \n",
       "13         0.000000  \n",
       "14         0.000000  \n",
       "15         0.000000  \n",
       "16         0.000000  \n",
       "\n",
       "[17 rows x 45 columns]"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "scarborough_grouped = scarborough_onehot.groupby('Neighborhood').mean().reset_index()\n",
    "scarborough_grouped"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(17, 45)"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "scarborough_grouped.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h4>Finding the top 5 venues in each neighbourhood</h4>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "----Agincourt----\n",
      "                  venue  freq\n",
      "0    Chinese Restaurant  0.27\n",
      "1      Asian Restaurant  0.18\n",
      "2  Hong Kong Restaurant  0.09\n",
      "3  Cantonese Restaurant  0.09\n",
      "4           Coffee Shop  0.09\n",
      "\n",
      "\n",
      "----Agincourt North, L'Amoreaux East, Milliken, Steeles East----\n",
      "                venue  freq\n",
      "0         Pizza Place  0.33\n",
      "1  Italian Restaurant  0.17\n",
      "2       Grocery Store  0.17\n",
      "3         Supermarket  0.17\n",
      "4          Restaurant  0.17\n",
      "\n",
      "\n",
      "----Birch Cliff, Cliffside West----\n",
      "                venue  freq\n",
      "0         Pizza Place  0.33\n",
      "1  Italian Restaurant  0.17\n",
      "2       Grocery Store  0.17\n",
      "3         Supermarket  0.17\n",
      "4          Restaurant  0.17\n",
      "\n",
      "\n",
      "----Cedarbrae----\n",
      "                    venue  freq\n",
      "0    Fast Food Restaurant  0.13\n",
      "1  Furniture / Home Store  0.09\n",
      "2             Coffee Shop  0.09\n",
      "3             Pizza Place  0.09\n",
      "4            Optical Shop  0.04\n",
      "\n",
      "\n",
      "----Clairlea, Golden Mile, Oakridge----\n",
      "                venue  freq\n",
      "0         Pizza Place  0.33\n",
      "1  Italian Restaurant  0.17\n",
      "2       Grocery Store  0.17\n",
      "3         Supermarket  0.17\n",
      "4          Restaurant  0.17\n",
      "\n",
      "\n",
      "----Clarks Corners, Sullivan, Tam O'Shanter----\n",
      "                venue  freq\n",
      "0         Pizza Place  0.33\n",
      "1  Italian Restaurant  0.17\n",
      "2       Grocery Store  0.17\n",
      "3         Supermarket  0.17\n",
      "4          Restaurant  0.17\n",
      "\n",
      "\n",
      "----Cliffcrest, Cliffside, Scarborough Village West----\n",
      "                venue  freq\n",
      "0         Pizza Place  0.33\n",
      "1  Italian Restaurant  0.17\n",
      "2       Grocery Store  0.17\n",
      "3         Supermarket  0.17\n",
      "4          Restaurant  0.17\n",
      "\n",
      "\n",
      "----Dorset Park, Scarborough Town Centre, Wexford Heights----\n",
      "                venue  freq\n",
      "0         Pizza Place  0.33\n",
      "1  Italian Restaurant  0.17\n",
      "2       Grocery Store  0.17\n",
      "3         Supermarket  0.17\n",
      "4          Restaurant  0.17\n",
      "\n",
      "\n",
      "----East Birchmount Park, Ionview, Kennedy Park----\n",
      "                venue  freq\n",
      "0         Pizza Place  0.33\n",
      "1  Italian Restaurant  0.17\n",
      "2       Grocery Store  0.17\n",
      "3         Supermarket  0.17\n",
      "4          Restaurant  0.17\n",
      "\n",
      "\n",
      "----Guildwood, Morningside, West Hill----\n",
      "                 venue  freq\n",
      "0                 Park   1.0\n",
      "1  Arts & Crafts Store   0.0\n",
      "2     Asian Restaurant   0.0\n",
      "3   Italian Restaurant   0.0\n",
      "4    Korean Restaurant   0.0\n",
      "\n",
      "\n",
      "----Highland Creek, Rouge Hill, Port Union----\n",
      "                venue  freq\n",
      "0         Pizza Place  0.33\n",
      "1  Italian Restaurant  0.17\n",
      "2       Grocery Store  0.17\n",
      "3         Supermarket  0.17\n",
      "4          Restaurant  0.17\n",
      "\n",
      "\n",
      "----L'Amoreaux West----\n",
      "                venue  freq\n",
      "0  Chinese Restaurant   0.4\n",
      "1         Coffee Shop   0.2\n",
      "2  Athletics & Sports   0.2\n",
      "3       Shopping Mall   0.2\n",
      "4        Liquor Store   0.0\n",
      "\n",
      "\n",
      "----Maryvale, Wexford----\n",
      "                 venue  freq\n",
      "0  Arts & Crafts Store  0.08\n",
      "1             Bus Stop  0.08\n",
      "2           Steakhouse  0.08\n",
      "3         Soccer Field  0.08\n",
      "4            Pool Hall  0.08\n",
      "\n",
      "\n",
      "----Rouge, Malvern----\n",
      "                        venue  freq\n",
      "0           Indian Restaurant   0.5\n",
      "1  Construction & Landscaping   0.5\n",
      "2         Arts & Crafts Store   0.0\n",
      "3           Korean Restaurant   0.0\n",
      "4                Liquor Store   0.0\n",
      "\n",
      "\n",
      "----Scarborough Village----\n",
      "                  venue  freq\n",
      "0           Coffee Shop  0.33\n",
      "1                   Pub  0.11\n",
      "2                   Gym  0.11\n",
      "3              Pharmacy  0.11\n",
      "4  Fast Food Restaurant  0.11\n",
      "\n",
      "\n",
      "----Upper Rouge----\n",
      "                  venue  freq\n",
      "0  Fast Food Restaurant  0.33\n",
      "1                  Park  0.33\n",
      "2              Pharmacy  0.33\n",
      "3   Arts & Crafts Store  0.00\n",
      "4     Indian Restaurant  0.00\n",
      "\n",
      "\n",
      "----Woburn----\n",
      "                           venue  freq\n",
      "0           Fast Food Restaurant  0.14\n",
      "1                    Coffee Shop  0.10\n",
      "2  Paper / Office Supplies Store  0.05\n",
      "3               Toy / Game Store  0.05\n",
      "4         Furniture / Home Store  0.05\n",
      "\n",
      "\n"
     ]
    }
   ],
   "source": [
    "num_top_venues = 5\n",
    "\n",
    "for hood in scarborough_grouped['Neighborhood']:\n",
    "    print(\"----\"+hood+\"----\")\n",
    "    temp = scarborough_grouped[scarborough_grouped['Neighborhood'] == hood].T.reset_index()\n",
    "    temp.columns = ['venue','freq']\n",
    "    temp = temp.iloc[1:]\n",
    "    temp['freq'] = temp['freq'].astype(float)\n",
    "    temp = temp.round({'freq': 2})\n",
    "    print(temp.sort_values('freq', ascending=False).reset_index(drop=True).head(num_top_venues))\n",
    "    print('\\n')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [],
   "source": [
    "def return_most_common_venues(row, num_top_venues):\n",
    "    row_categories = row.iloc[1:]\n",
    "    row_categories_sorted = row_categories.sort_values(ascending=False)\n",
    "    \n",
    "    return row_categories_sorted.index.values[0:num_top_venues]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Neighborhood</th>\n",
       "      <th>1st Most Common Venue</th>\n",
       "      <th>2nd Most Common Venue</th>\n",
       "      <th>3rd Most Common Venue</th>\n",
       "      <th>4th Most Common Venue</th>\n",
       "      <th>5th Most Common Venue</th>\n",
       "      <th>6th Most Common Venue</th>\n",
       "      <th>7th Most Common Venue</th>\n",
       "      <th>8th Most Common Venue</th>\n",
       "      <th>9th Most Common Venue</th>\n",
       "      <th>10th Most Common Venue</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Agincourt</td>\n",
       "      <td>Chinese Restaurant</td>\n",
       "      <td>Asian Restaurant</td>\n",
       "      <td>Cantonese Restaurant</td>\n",
       "      <td>Train Station</td>\n",
       "      <td>Vietnamese Restaurant</td>\n",
       "      <td>Hong Kong Restaurant</td>\n",
       "      <td>Korean Restaurant</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Electronics Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Agincourt North, L'Amoreaux East, Milliken, St...</td>\n",
       "      <td>Pizza Place</td>\n",
       "      <td>Supermarket</td>\n",
       "      <td>Italian Restaurant</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>Badminton Court</td>\n",
       "      <td>Chinese Restaurant</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Electronics Store</td>\n",
       "      <td>Discount Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Birch Cliff, Cliffside West</td>\n",
       "      <td>Pizza Place</td>\n",
       "      <td>Supermarket</td>\n",
       "      <td>Italian Restaurant</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>Badminton Court</td>\n",
       "      <td>Chinese Restaurant</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Electronics Store</td>\n",
       "      <td>Discount Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Cedarbrae</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Pizza Place</td>\n",
       "      <td>Furniture / Home Store</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Gym</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>Clothing Store</td>\n",
       "      <td>Liquor Store</td>\n",
       "      <td>Optical Shop</td>\n",
       "      <td>Paper / Office Supplies Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Clairlea, Golden Mile, Oakridge</td>\n",
       "      <td>Pizza Place</td>\n",
       "      <td>Supermarket</td>\n",
       "      <td>Italian Restaurant</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>Badminton Court</td>\n",
       "      <td>Chinese Restaurant</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Electronics Store</td>\n",
       "      <td>Discount Store</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                        Neighborhood 1st Most Common Venue  \\\n",
       "0                                          Agincourt    Chinese Restaurant   \n",
       "1  Agincourt North, L'Amoreaux East, Milliken, St...           Pizza Place   \n",
       "2                        Birch Cliff, Cliffside West           Pizza Place   \n",
       "3                                          Cedarbrae  Fast Food Restaurant   \n",
       "4                    Clairlea, Golden Mile, Oakridge           Pizza Place   \n",
       "\n",
       "  2nd Most Common Venue   3rd Most Common Venue 4th Most Common Venue  \\\n",
       "0      Asian Restaurant    Cantonese Restaurant         Train Station   \n",
       "1           Supermarket      Italian Restaurant            Restaurant   \n",
       "2           Supermarket      Italian Restaurant            Restaurant   \n",
       "3           Pizza Place  Furniture / Home Store           Coffee Shop   \n",
       "4           Supermarket      Italian Restaurant            Restaurant   \n",
       "\n",
       "   5th Most Common Venue 6th Most Common Venue 7th Most Common Venue  \\\n",
       "0  Vietnamese Restaurant  Hong Kong Restaurant     Korean Restaurant   \n",
       "1          Grocery Store       Badminton Court    Chinese Restaurant   \n",
       "2          Grocery Store       Badminton Court    Chinese Restaurant   \n",
       "3                    Gym         Grocery Store        Clothing Store   \n",
       "4          Grocery Store       Badminton Court    Chinese Restaurant   \n",
       "\n",
       "  8th Most Common Venue 9th Most Common Venue         10th Most Common Venue  \n",
       "0           Coffee Shop  Fast Food Restaurant              Electronics Store  \n",
       "1  Fast Food Restaurant     Electronics Store                 Discount Store  \n",
       "2  Fast Food Restaurant     Electronics Store                 Discount Store  \n",
       "3          Liquor Store          Optical Shop  Paper / Office Supplies Store  \n",
       "4  Fast Food Restaurant     Electronics Store                 Discount Store  "
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "num_top_venues = 10\n",
    "\n",
    "indicators = ['st', 'nd', 'rd']\n",
    "\n",
    "# create columns according to number of top venues\n",
    "columns = ['Neighborhood']\n",
    "for ind in np.arange(num_top_venues):\n",
    "    try:\n",
    "        columns.append('{}{} Most Common Venue'.format(ind+1, indicators[ind]))\n",
    "    except:\n",
    "        columns.append('{}th Most Common Venue'.format(ind+1))\n",
    "\n",
    "# create a new dataframe\n",
    "neighborhoods_venues_sorted = pd.DataFrame(columns=columns)\n",
    "neighborhoods_venues_sorted['Neighborhood'] = scarborough_grouped['Neighborhood']\n",
    "\n",
    "for ind in np.arange(scarborough_grouped.shape[0]):\n",
    "    neighborhoods_venues_sorted.iloc[ind, 1:] = return_most_common_venues(scarborough_grouped.iloc[ind, :], num_top_venues)\n",
    "\n",
    "neighborhoods_venues_sorted.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h4>Let us now cluster neighbourhoods</h4>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([1, 0, 0, 1, 0, 0, 0, 0, 0, 2], dtype=int32)"
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# set number of clusters\n",
    "kclusters = 5\n",
    "\n",
    "scarborough_grouped_clustering = scarborough_grouped.drop('Neighborhood', 1)\n",
    "\n",
    "# run k-means clustering\n",
    "kmeans = KMeans(n_clusters=kclusters, random_state=0).fit(scarborough_grouped_clustering)\n",
    "\n",
    "# check cluster labels generated for each row in the dataframe\n",
    "kmeans.labels_[0:10] "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Borough</th>\n",
       "      <th>Neighborhood</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Cluster Labels</th>\n",
       "      <th>1st Most Common Venue</th>\n",
       "      <th>2nd Most Common Venue</th>\n",
       "      <th>3rd Most Common Venue</th>\n",
       "      <th>4th Most Common Venue</th>\n",
       "      <th>5th Most Common Venue</th>\n",
       "      <th>6th Most Common Venue</th>\n",
       "      <th>7th Most Common Venue</th>\n",
       "      <th>8th Most Common Venue</th>\n",
       "      <th>9th Most Common Venue</th>\n",
       "      <th>10th Most Common Venue</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Rouge, Malvern</td>\n",
       "      <td>43.813464</td>\n",
       "      <td>-79.205981</td>\n",
       "      <td>3</td>\n",
       "      <td>Indian Restaurant</td>\n",
       "      <td>Construction &amp; Landscaping</td>\n",
       "      <td>Warehouse Store</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>Furniture / Home Store</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Electronics Store</td>\n",
       "      <td>Discount Store</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Clothing Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Highland Creek, Rouge Hill, Port Union</td>\n",
       "      <td>54.284760</td>\n",
       "      <td>-0.409034</td>\n",
       "      <td>0</td>\n",
       "      <td>Pizza Place</td>\n",
       "      <td>Supermarket</td>\n",
       "      <td>Italian Restaurant</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>Badminton Court</td>\n",
       "      <td>Chinese Restaurant</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Electronics Store</td>\n",
       "      <td>Discount Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Guildwood, Morningside, West Hill</td>\n",
       "      <td>43.753480</td>\n",
       "      <td>-79.179995</td>\n",
       "      <td>2</td>\n",
       "      <td>Park</td>\n",
       "      <td>Warehouse Store</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>Furniture / Home Store</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Electronics Store</td>\n",
       "      <td>Discount Store</td>\n",
       "      <td>Construction &amp; Landscaping</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Clothing Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Woburn</td>\n",
       "      <td>43.759824</td>\n",
       "      <td>-79.225291</td>\n",
       "      <td>1</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Pizza Place</td>\n",
       "      <td>Furniture / Home Store</td>\n",
       "      <td>Discount Store</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>Vietnamese Restaurant</td>\n",
       "      <td>Indian Restaurant</td>\n",
       "      <td>Optical Shop</td>\n",
       "      <td>Paper / Office Supplies Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Scarborough</td>\n",
       "      <td>Cedarbrae</td>\n",
       "      <td>43.756467</td>\n",
       "      <td>-79.226692</td>\n",
       "      <td>1</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Pizza Place</td>\n",
       "      <td>Furniture / Home Store</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Gym</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>Clothing Store</td>\n",
       "      <td>Liquor Store</td>\n",
       "      <td>Optical Shop</td>\n",
       "      <td>Paper / Office Supplies Store</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Borough                            Neighborhood   Latitude  Longitude  \\\n",
       "0  Scarborough                          Rouge, Malvern  43.813464 -79.205981   \n",
       "1  Scarborough  Highland Creek, Rouge Hill, Port Union  54.284760  -0.409034   \n",
       "2  Scarborough       Guildwood, Morningside, West Hill  43.753480 -79.179995   \n",
       "3  Scarborough                                  Woburn  43.759824 -79.225291   \n",
       "4  Scarborough                               Cedarbrae  43.756467 -79.226692   \n",
       "\n",
       "   Cluster Labels 1st Most Common Venue       2nd Most Common Venue  \\\n",
       "0               3     Indian Restaurant  Construction & Landscaping   \n",
       "1               0           Pizza Place                 Supermarket   \n",
       "2               2                  Park             Warehouse Store   \n",
       "3               1  Fast Food Restaurant                 Coffee Shop   \n",
       "4               1  Fast Food Restaurant                 Pizza Place   \n",
       "\n",
       "    3rd Most Common Venue   4th Most Common Venue   5th Most Common Venue  \\\n",
       "0         Warehouse Store           Grocery Store  Furniture / Home Store   \n",
       "1      Italian Restaurant              Restaurant           Grocery Store   \n",
       "2           Grocery Store  Furniture / Home Store    Fast Food Restaurant   \n",
       "3             Pizza Place  Furniture / Home Store          Discount Store   \n",
       "4  Furniture / Home Store             Coffee Shop                     Gym   \n",
       "\n",
       "  6th Most Common Venue  7th Most Common Venue       8th Most Common Venue  \\\n",
       "0  Fast Food Restaurant      Electronics Store              Discount Store   \n",
       "1       Badminton Court     Chinese Restaurant        Fast Food Restaurant   \n",
       "2     Electronics Store         Discount Store  Construction & Landscaping   \n",
       "3         Grocery Store  Vietnamese Restaurant           Indian Restaurant   \n",
       "4         Grocery Store         Clothing Store                Liquor Store   \n",
       "\n",
       "  9th Most Common Venue         10th Most Common Venue  \n",
       "0           Coffee Shop                 Clothing Store  \n",
       "1     Electronics Store                 Discount Store  \n",
       "2           Coffee Shop                 Clothing Store  \n",
       "3          Optical Shop  Paper / Office Supplies Store  \n",
       "4          Optical Shop  Paper / Office Supplies Store  "
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# add clustering labels\n",
    "neighborhoods_venues_sorted.insert(0, 'Cluster Labels', kmeans.labels_)\n",
    "\n",
    "scarborough_merged = scarborough_data\n",
    "\n",
    "# merge toronto_grouped with toronto_data to add latitude/longitude for each neighborhood\n",
    "scarborough_merged = scarborough_merged.join(neighborhoods_venues_sorted.set_index('Neighborhood'), on='Neighborhood')\n",
    "\n",
    "scarborough_merged.head() # check the last columns!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><iframe src=\"data:text/html;charset=utf-8;base64,\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
      ],
      "text/plain": [
       "<folium.folium.Map at 0x7f954430da20>"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create map\n",
    "map_clusters = folium.Map(location=[s_latitude, s_longitude], zoom_start=11)\n",
    "\n",
    "# set color scheme for the clusters\n",
    "x = np.arange(kclusters)\n",
    "ys = [i + x + (i*x)**2 for i in range(kclusters)]\n",
    "colors_array = cm.rainbow(np.linspace(0, 1, len(ys)))\n",
    "rainbow = [colors.rgb2hex(i) for i in colors_array]\n",
    "\n",
    "# add markers to the map\n",
    "markers_colors = []\n",
    "for lat, lon, poi, cluster in zip(scarborough_merged['Latitude'], scarborough_merged['Longitude'], scarborough_merged['Neighborhood'], scarborough_merged['Cluster Labels']):\n",
    "    label = folium.Popup(str(poi) + ' Cluster ' + str(cluster), parse_html=True)\n",
    "    folium.CircleMarker(\n",
    "        [lat, lon],\n",
    "        radius=5,\n",
    "        popup=label,\n",
    "        color=rainbow[cluster-1],\n",
    "        fill=True,\n",
    "        fill_color=rainbow[cluster-1],\n",
    "        fill_opacity=0.7).add_to(map_clusters)\n",
    "       \n",
    "map_clusters"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h4>Examining our clusters</h4>\n",
    "Let us examine first cluster"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Neighborhood</th>\n",
       "      <th>1st Most Common Venue</th>\n",
       "      <th>2nd Most Common Venue</th>\n",
       "      <th>3rd Most Common Venue</th>\n",
       "      <th>4th Most Common Venue</th>\n",
       "      <th>5th Most Common Venue</th>\n",
       "      <th>6th Most Common Venue</th>\n",
       "      <th>7th Most Common Venue</th>\n",
       "      <th>8th Most Common Venue</th>\n",
       "      <th>9th Most Common Venue</th>\n",
       "      <th>10th Most Common Venue</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Highland Creek, Rouge Hill, Port Union</td>\n",
       "      <td>Pizza Place</td>\n",
       "      <td>Supermarket</td>\n",
       "      <td>Italian Restaurant</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>Badminton Court</td>\n",
       "      <td>Chinese Restaurant</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Electronics Store</td>\n",
       "      <td>Discount Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>East Birchmount Park, Ionview, Kennedy Park</td>\n",
       "      <td>Pizza Place</td>\n",
       "      <td>Supermarket</td>\n",
       "      <td>Italian Restaurant</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>Badminton Court</td>\n",
       "      <td>Chinese Restaurant</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Electronics Store</td>\n",
       "      <td>Discount Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Clairlea, Golden Mile, Oakridge</td>\n",
       "      <td>Pizza Place</td>\n",
       "      <td>Supermarket</td>\n",
       "      <td>Italian Restaurant</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>Badminton Court</td>\n",
       "      <td>Chinese Restaurant</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Electronics Store</td>\n",
       "      <td>Discount Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Cliffcrest, Cliffside, Scarborough Village West</td>\n",
       "      <td>Pizza Place</td>\n",
       "      <td>Supermarket</td>\n",
       "      <td>Italian Restaurant</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>Badminton Court</td>\n",
       "      <td>Chinese Restaurant</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Electronics Store</td>\n",
       "      <td>Discount Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Birch Cliff, Cliffside West</td>\n",
       "      <td>Pizza Place</td>\n",
       "      <td>Supermarket</td>\n",
       "      <td>Italian Restaurant</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>Badminton Court</td>\n",
       "      <td>Chinese Restaurant</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Electronics Store</td>\n",
       "      <td>Discount Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Dorset Park, Scarborough Town Centre, Wexford ...</td>\n",
       "      <td>Pizza Place</td>\n",
       "      <td>Supermarket</td>\n",
       "      <td>Italian Restaurant</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>Badminton Court</td>\n",
       "      <td>Chinese Restaurant</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Electronics Store</td>\n",
       "      <td>Discount Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Clarks Corners, Sullivan, Tam O'Shanter</td>\n",
       "      <td>Pizza Place</td>\n",
       "      <td>Supermarket</td>\n",
       "      <td>Italian Restaurant</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>Badminton Court</td>\n",
       "      <td>Chinese Restaurant</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Electronics Store</td>\n",
       "      <td>Discount Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Agincourt North, L'Amoreaux East, Milliken, St...</td>\n",
       "      <td>Pizza Place</td>\n",
       "      <td>Supermarket</td>\n",
       "      <td>Italian Restaurant</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>Badminton Court</td>\n",
       "      <td>Chinese Restaurant</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Electronics Store</td>\n",
       "      <td>Discount Store</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                         Neighborhood 1st Most Common Venue  \\\n",
       "1              Highland Creek, Rouge Hill, Port Union           Pizza Place   \n",
       "6         East Birchmount Park, Ionview, Kennedy Park           Pizza Place   \n",
       "7                     Clairlea, Golden Mile, Oakridge           Pizza Place   \n",
       "8     Cliffcrest, Cliffside, Scarborough Village West           Pizza Place   \n",
       "9                         Birch Cliff, Cliffside West           Pizza Place   \n",
       "10  Dorset Park, Scarborough Town Centre, Wexford ...           Pizza Place   \n",
       "13            Clarks Corners, Sullivan, Tam O'Shanter           Pizza Place   \n",
       "14  Agincourt North, L'Amoreaux East, Milliken, St...           Pizza Place   \n",
       "\n",
       "   2nd Most Common Venue 3rd Most Common Venue 4th Most Common Venue  \\\n",
       "1            Supermarket    Italian Restaurant            Restaurant   \n",
       "6            Supermarket    Italian Restaurant            Restaurant   \n",
       "7            Supermarket    Italian Restaurant            Restaurant   \n",
       "8            Supermarket    Italian Restaurant            Restaurant   \n",
       "9            Supermarket    Italian Restaurant            Restaurant   \n",
       "10           Supermarket    Italian Restaurant            Restaurant   \n",
       "13           Supermarket    Italian Restaurant            Restaurant   \n",
       "14           Supermarket    Italian Restaurant            Restaurant   \n",
       "\n",
       "   5th Most Common Venue 6th Most Common Venue 7th Most Common Venue  \\\n",
       "1          Grocery Store       Badminton Court    Chinese Restaurant   \n",
       "6          Grocery Store       Badminton Court    Chinese Restaurant   \n",
       "7          Grocery Store       Badminton Court    Chinese Restaurant   \n",
       "8          Grocery Store       Badminton Court    Chinese Restaurant   \n",
       "9          Grocery Store       Badminton Court    Chinese Restaurant   \n",
       "10         Grocery Store       Badminton Court    Chinese Restaurant   \n",
       "13         Grocery Store       Badminton Court    Chinese Restaurant   \n",
       "14         Grocery Store       Badminton Court    Chinese Restaurant   \n",
       "\n",
       "   8th Most Common Venue 9th Most Common Venue 10th Most Common Venue  \n",
       "1   Fast Food Restaurant     Electronics Store         Discount Store  \n",
       "6   Fast Food Restaurant     Electronics Store         Discount Store  \n",
       "7   Fast Food Restaurant     Electronics Store         Discount Store  \n",
       "8   Fast Food Restaurant     Electronics Store         Discount Store  \n",
       "9   Fast Food Restaurant     Electronics Store         Discount Store  \n",
       "10  Fast Food Restaurant     Electronics Store         Discount Store  \n",
       "13  Fast Food Restaurant     Electronics Store         Discount Store  \n",
       "14  Fast Food Restaurant     Electronics Store         Discount Store  "
      ]
     },
     "execution_count": 69,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "scarborough_merged.loc[scarborough_merged['Cluster Labels'] == 0, scarborough_merged.columns[[1] + list(range(5, scarborough_merged.shape[1]))]]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Examine second cluster"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Neighborhood</th>\n",
       "      <th>1st Most Common Venue</th>\n",
       "      <th>2nd Most Common Venue</th>\n",
       "      <th>3rd Most Common Venue</th>\n",
       "      <th>4th Most Common Venue</th>\n",
       "      <th>5th Most Common Venue</th>\n",
       "      <th>6th Most Common Venue</th>\n",
       "      <th>7th Most Common Venue</th>\n",
       "      <th>8th Most Common Venue</th>\n",
       "      <th>9th Most Common Venue</th>\n",
       "      <th>10th Most Common Venue</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Woburn</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Pizza Place</td>\n",
       "      <td>Furniture / Home Store</td>\n",
       "      <td>Discount Store</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>Vietnamese Restaurant</td>\n",
       "      <td>Indian Restaurant</td>\n",
       "      <td>Optical Shop</td>\n",
       "      <td>Paper / Office Supplies Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Cedarbrae</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Pizza Place</td>\n",
       "      <td>Furniture / Home Store</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Gym</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>Clothing Store</td>\n",
       "      <td>Liquor Store</td>\n",
       "      <td>Optical Shop</td>\n",
       "      <td>Paper / Office Supplies Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Scarborough Village</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Gym</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Discount Store</td>\n",
       "      <td>Chinese Restaurant</td>\n",
       "      <td>Pub</td>\n",
       "      <td>Pharmacy</td>\n",
       "      <td>Cantonese Restaurant</td>\n",
       "      <td>Furniture / Home Store</td>\n",
       "      <td>Electronics Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Maryvale, Wexford</td>\n",
       "      <td>Warehouse Store</td>\n",
       "      <td>Pool Hall</td>\n",
       "      <td>Badminton Court</td>\n",
       "      <td>Breakfast Spot</td>\n",
       "      <td>Bus Stop</td>\n",
       "      <td>Chinese Restaurant</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Greek Restaurant</td>\n",
       "      <td>Pizza Place</td>\n",
       "      <td>Arts &amp; Crafts Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Agincourt</td>\n",
       "      <td>Chinese Restaurant</td>\n",
       "      <td>Asian Restaurant</td>\n",
       "      <td>Cantonese Restaurant</td>\n",
       "      <td>Train Station</td>\n",
       "      <td>Vietnamese Restaurant</td>\n",
       "      <td>Hong Kong Restaurant</td>\n",
       "      <td>Korean Restaurant</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Electronics Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>L'Amoreaux West</td>\n",
       "      <td>Chinese Restaurant</td>\n",
       "      <td>Athletics &amp; Sports</td>\n",
       "      <td>Shopping Mall</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Warehouse Store</td>\n",
       "      <td>Cantonese Restaurant</td>\n",
       "      <td>Furniture / Home Store</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Electronics Store</td>\n",
       "      <td>Discount Store</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           Neighborhood 1st Most Common Venue 2nd Most Common Venue  \\\n",
       "3                Woburn  Fast Food Restaurant           Coffee Shop   \n",
       "4             Cedarbrae  Fast Food Restaurant           Pizza Place   \n",
       "5   Scarborough Village           Coffee Shop                   Gym   \n",
       "11    Maryvale, Wexford       Warehouse Store             Pool Hall   \n",
       "12            Agincourt    Chinese Restaurant      Asian Restaurant   \n",
       "15      L'Amoreaux West    Chinese Restaurant    Athletics & Sports   \n",
       "\n",
       "     3rd Most Common Venue   4th Most Common Venue  5th Most Common Venue  \\\n",
       "3              Pizza Place  Furniture / Home Store         Discount Store   \n",
       "4   Furniture / Home Store             Coffee Shop                    Gym   \n",
       "5     Fast Food Restaurant          Discount Store     Chinese Restaurant   \n",
       "11         Badminton Court          Breakfast Spot               Bus Stop   \n",
       "12    Cantonese Restaurant           Train Station  Vietnamese Restaurant   \n",
       "15           Shopping Mall             Coffee Shop        Warehouse Store   \n",
       "\n",
       "   6th Most Common Venue   7th Most Common Venue 8th Most Common Venue  \\\n",
       "3          Grocery Store   Vietnamese Restaurant     Indian Restaurant   \n",
       "4          Grocery Store          Clothing Store          Liquor Store   \n",
       "5                    Pub                Pharmacy  Cantonese Restaurant   \n",
       "11    Chinese Restaurant             Coffee Shop      Greek Restaurant   \n",
       "12  Hong Kong Restaurant       Korean Restaurant           Coffee Shop   \n",
       "15  Cantonese Restaurant  Furniture / Home Store  Fast Food Restaurant   \n",
       "\n",
       "     9th Most Common Venue         10th Most Common Venue  \n",
       "3             Optical Shop  Paper / Office Supplies Store  \n",
       "4             Optical Shop  Paper / Office Supplies Store  \n",
       "5   Furniture / Home Store              Electronics Store  \n",
       "11             Pizza Place            Arts & Crafts Store  \n",
       "12    Fast Food Restaurant              Electronics Store  \n",
       "15       Electronics Store                 Discount Store  "
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "scarborough_merged.loc[scarborough_merged['Cluster Labels'] == 1, scarborough_merged.columns[[1] + list(range(5, scarborough_merged.shape[1]))]]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Examine third cluster"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Neighborhood</th>\n",
       "      <th>1st Most Common Venue</th>\n",
       "      <th>2nd Most Common Venue</th>\n",
       "      <th>3rd Most Common Venue</th>\n",
       "      <th>4th Most Common Venue</th>\n",
       "      <th>5th Most Common Venue</th>\n",
       "      <th>6th Most Common Venue</th>\n",
       "      <th>7th Most Common Venue</th>\n",
       "      <th>8th Most Common Venue</th>\n",
       "      <th>9th Most Common Venue</th>\n",
       "      <th>10th Most Common Venue</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Guildwood, Morningside, West Hill</td>\n",
       "      <td>Park</td>\n",
       "      <td>Warehouse Store</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>Furniture / Home Store</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Electronics Store</td>\n",
       "      <td>Discount Store</td>\n",
       "      <td>Construction &amp; Landscaping</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Clothing Store</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                        Neighborhood 1st Most Common Venue  \\\n",
       "2  Guildwood, Morningside, West Hill                  Park   \n",
       "\n",
       "  2nd Most Common Venue 3rd Most Common Venue   4th Most Common Venue  \\\n",
       "2       Warehouse Store         Grocery Store  Furniture / Home Store   \n",
       "\n",
       "  5th Most Common Venue 6th Most Common Venue 7th Most Common Venue  \\\n",
       "2  Fast Food Restaurant     Electronics Store        Discount Store   \n",
       "\n",
       "        8th Most Common Venue 9th Most Common Venue 10th Most Common Venue  \n",
       "2  Construction & Landscaping           Coffee Shop         Clothing Store  "
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "scarborough_merged.loc[scarborough_merged['Cluster Labels'] == 2, scarborough_merged.columns[[1] + list(range(5, scarborough_merged.shape[1]))]]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Examine 4th cluster"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Neighborhood</th>\n",
       "      <th>1st Most Common Venue</th>\n",
       "      <th>2nd Most Common Venue</th>\n",
       "      <th>3rd Most Common Venue</th>\n",
       "      <th>4th Most Common Venue</th>\n",
       "      <th>5th Most Common Venue</th>\n",
       "      <th>6th Most Common Venue</th>\n",
       "      <th>7th Most Common Venue</th>\n",
       "      <th>8th Most Common Venue</th>\n",
       "      <th>9th Most Common Venue</th>\n",
       "      <th>10th Most Common Venue</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Rouge, Malvern</td>\n",
       "      <td>Indian Restaurant</td>\n",
       "      <td>Construction &amp; Landscaping</td>\n",
       "      <td>Warehouse Store</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>Furniture / Home Store</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Electronics Store</td>\n",
       "      <td>Discount Store</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Clothing Store</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Neighborhood 1st Most Common Venue       2nd Most Common Venue  \\\n",
       "0  Rouge, Malvern     Indian Restaurant  Construction & Landscaping   \n",
       "\n",
       "  3rd Most Common Venue 4th Most Common Venue   5th Most Common Venue  \\\n",
       "0       Warehouse Store         Grocery Store  Furniture / Home Store   \n",
       "\n",
       "  6th Most Common Venue 7th Most Common Venue 8th Most Common Venue  \\\n",
       "0  Fast Food Restaurant     Electronics Store        Discount Store   \n",
       "\n",
       "  9th Most Common Venue 10th Most Common Venue  \n",
       "0           Coffee Shop         Clothing Store  "
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "scarborough_merged.loc[scarborough_merged['Cluster Labels'] == 3, scarborough_merged.columns[[1] + list(range(5, scarborough_merged.shape[1]))]]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Examine 5th cluster"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Neighborhood</th>\n",
       "      <th>1st Most Common Venue</th>\n",
       "      <th>2nd Most Common Venue</th>\n",
       "      <th>3rd Most Common Venue</th>\n",
       "      <th>4th Most Common Venue</th>\n",
       "      <th>5th Most Common Venue</th>\n",
       "      <th>6th Most Common Venue</th>\n",
       "      <th>7th Most Common Venue</th>\n",
       "      <th>8th Most Common Venue</th>\n",
       "      <th>9th Most Common Venue</th>\n",
       "      <th>10th Most Common Venue</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Upper Rouge</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Park</td>\n",
       "      <td>Pharmacy</td>\n",
       "      <td>Warehouse Store</td>\n",
       "      <td>Chinese Restaurant</td>\n",
       "      <td>Furniture / Home Store</td>\n",
       "      <td>Electronics Store</td>\n",
       "      <td>Discount Store</td>\n",
       "      <td>Construction &amp; Landscaping</td>\n",
       "      <td>Coffee Shop</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Neighborhood 1st Most Common Venue 2nd Most Common Venue  \\\n",
       "16  Upper Rouge  Fast Food Restaurant                  Park   \n",
       "\n",
       "   3rd Most Common Venue 4th Most Common Venue 5th Most Common Venue  \\\n",
       "16              Pharmacy       Warehouse Store    Chinese Restaurant   \n",
       "\n",
       "     6th Most Common Venue 7th Most Common Venue 8th Most Common Venue  \\\n",
       "16  Furniture / Home Store     Electronics Store        Discount Store   \n",
       "\n",
       "         9th Most Common Venue 10th Most Common Venue  \n",
       "16  Construction & Landscaping            Coffee Shop  "
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "scarborough_merged.loc[scarborough_merged['Cluster Labels'] == 4, scarborough_merged.columns[[1] + list(range(5, scarborough_merged.shape[1]))]]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Based on our clusters we see that first cluster had neighbourhoods which had Pizza place, Supermarket, Italian resturants as common venue, which means that this neighbourhood is more favourable for european or italian residents.\n",
    "Second cluster had meighbourhoods which had Chinese, Fast food and Cantonese place venues, this suggests that this place is more favourable to Asian particularly chinese residents\n",
    "Third, Fourth and Fifth clusters did not have too many neighbourhoods in them, but were distinct from first two clusters as they had Park, Pharmacy, Warehoue and Indian restuarants as their top venues."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.5",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.5.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
